<!DOCTYPE html>  
<html lang="en">  
<head>  
    <meta charset="UTF-8">  
    <meta name="viewport" content="width=device-width, initial-scale=1.0">  
    <title>Bina Planı</title>  
    <link rel="icon" type="image/png" href="img/icon.png" sizes="32x32">
    <!-- Bootstrap CSS -->  
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/index.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>  

    <style>  
    
/* ---- Temel Varlıklar ---- */
body {
  background: linear-gradient(to bottom, #ede9de 0%, #eef1f7 100%);
  min-height: 100vh;
  font-family: "Varela Round", Arial, sans-serif;
  margin: 0; padding: 0;
}

/* ---- Kısa Menü Barı ---- */
.custom-short-menu {
  display: flex;
  gap: 22px;
  justify-content: center;
  align-items: flex-start;
  width: 100%;
  margin: 18px 0 10px 0;
}
.menu-btn {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 70px;
  text-decoration: none;
  background: none;
  border: none;
  transition: color 0.18s, background 0.18s;
  cursor: pointer;
  outline: none;
}
.menu-btn img {
  width: 32px;
  height: 32px;
  margin-bottom: 4px;
}
.menu-btn span {
  font-size: 14px;
  color: #333;
}
.menu-btn:hover span, .menu-btn:focus span {
  color: #1d67c4;
  font-weight: 500;
}
#buttonHome { margin-right: 18px; }

/* ---- Navbar ve ProjectName (sol üst) ---- */
.container-fluid {
  display: flex;
  flex: 0 0 100%;
  flex-wrap: nowrap;
  align-items: center;
}
#projectName {
  flex: 0 0 90%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-family: Arial, sans-serif;
  font-size: 36px;
}
.img-fluid {
  flex: 0 0 auto;
  height: 30px;
  width: 30px;
  margin-right: 10px;
}

/* ---- Butonlar ---- */
.custom-btn {
  background-color: #847539;
  color: #fff;
  border: none;
  border-radius: 10px;
  padding: 10px 20px;
  font-family: "Varela Round";
  font-size: 16px;
  font-weight: bold;
  letter-spacing: 2px;
  cursor: pointer;
  transition: background-color 0.3s;
  margin-right: 40px;
}
.custom-btn:hover, .custom-btn:focus {
  background-color: #67552A;
}

/* ---- Süreç Başlığı ---- */
.surec-title {
  font-family: 'Oswald', sans-serif;
  font-size: 2.1rem;
  font-weight: bold;
  text-align: center;
  color: #67552A;
  margin: 32px 0 36px 0;
}

/* ---- Süreç Adımları (Yatay Tab Bar) ---- */
.flow-steps-container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  gap: 0.5em;
  padding: 1.25em 0 2em 0;
}
.flow-step-btn {
  font-family: inherit;
  background: #fff;
  color: #333;
  border: 2px solid #e2e8f0;
  border-radius: 2em;
  font-weight: 500;
  font-size: 1.08em;
  padding: 0.65em 1.5em;
  display: flex;
  align-items: center;
  cursor: pointer;
  box-shadow: 0 2px 8px 0 #e5ecf7;
  transition: color 0.14s, background 0.16s, border-color 0.16s;
  outline: none;
  position: relative;
}
.flow-step-btn.active, .flow-step-btn:focus {
  background: linear-gradient(90deg, #2563eb 0%, #60a5fa 70%);
  color: #fff;
  border-color: #468ef9;
  box-shadow: 0 4px 16px 0 #cbd9fd;
  z-index: 1;
}
.flow-step-arrow {
  display: flex;
  align-items: center;
  height: 30px;
}
.flow-step-arrow svg {
  display: block;
  width: 28px;
  height: 30px;
  stroke: #d1d5db;
  stroke-width: 2.5;
  fill: none;
}

/* ---- Evrak İşleri (Accordion Kutuları) ---- */
.surec-section { display: none; }
.surec-section.active { display: block; animation: fadein 0.5s; }
@keyframes fadein {
  from { opacity: 0; transform: translateY(20px);}
  to { opacity: 1; transform: translateY(0);}
}
.bolum-baslik {
  font-family: 'Oswald', sans-serif;
  font-size: 1.26rem;
  color: #5b74e6;
  font-weight: 700;
  margin-bottom: 1.2rem;
  letter-spacing: 0.5px;
  text-align: center;
  margin-top: 4px;
}
.alt-kutu-icerik { 
  display: none; 
}
.alt-baslik-kutu[aria-expanded="true"] + .alt-kutu-icerik { 
  display: block; 
}
.er-kutular {
  width: 100%;
  max-width: 750px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 1.1rem;
}
.alt-baslik-kutu {
  background: linear-gradient(90deg, #f7ecd2 0%, #e3e7fa 100%);
  border-radius: 1.4rem;
  box-shadow: 0 4px 14px 0 rgba(160,160,160,0.07);
  padding: 1.0rem 1.25rem 1.08rem 1.31rem;
  border: none;
  display: flex;
  width: 100%;
  cursor: pointer;
  position: relative;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 1.07rem;
  font-weight: 700;
  color: #2c2c21;
  transition: background .18s, box-shadow .18s, color .17s;
  text-align: left;
}
.alt-baslik-kutu:hover, .alt-baslik-kutu:focus {
  background: linear-gradient(90deg, #f2e5be 0%, #cbd8f3 100%);
  color: #2857ad;
  box-shadow: 0 8px 22px 0 rgba(120,140,190,0.12);
  outline: none;
}
.alt-kutu-arrow {
  position: absolute;
  right: 18px;
  top: 50%;
  transform: translateY(-50%) rotate(0deg);
  transition: transform .25s cubic-bezier(.43,1.16,.45,1.13);
  font-size: 1.08em;
  pointer-events: none;
  color: #caad2e;
}
.alt-baslik-kutu[aria-expanded="true"] .alt-kutu-arrow {
  transform: translateY(-50%) rotate(90deg);
  color: #4a75e0;
}
.alt-kutu-icerik {
  background: #f7ecd2;
  border-radius: 0 0 1rem 1rem;
  margin-top: -6px;
  box-shadow: 0 2px 8px 0 rgba(180,180,180,0.08);
  padding: 0.7rem 1.7rem 1.08rem 1.7rem;
  animation: fadein .4s;
  width: 100%;
}
.alt-kutu-icerik ul { margin-bottom: 0; }
.alt-kutu-icerik li {
  font-family: "Varela Round", Arial, sans-serif;
  font-size: 1rem;
  color: #312e21;
  margin-bottom: 0.43rem;
}

/* ---- Evrak Ekle Butonu ---- */
.evrak-ekle-btn {
  display: block;
  margin: 50px auto 0 auto;
  font-family: "Oswald", Arial, sans-serif;
  font-size: 1.15rem;
  background: linear-gradient(90deg, #e3e7fa 0%, #f7ecd2 100%);
  border-radius: 14px;
  border: none;
  color: #3560bd;
  padding: 0.8rem 1.7rem;
  font-weight: 700;
  box-shadow: 0 2px 10px 0 rgba(180,180,180,0.10);
  transition: background .2s, color .2s, box-shadow .14s;
  letter-spacing: 1px;
}
.evrak-ekle-btn:hover, .evrak-ekle-btn:focus {
  background: linear-gradient(90deg, #f7ecd2 0%, #e3e7fa 100%);
  color: #1d4188;
  box-shadow: 0 4px 17px 1px rgba(80,100,200,0.13);
  outline: none;
}

/* ---- Üretim Adımları Kutuları ---- */
.uretim-steps-row {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 8px;
  justify-content: center;
  margin: 20px 0 0 0;
}
.uretim-step-btn {
  background: linear-gradient(90deg, #f7ecd2 0%, #e3e7fa 100%);
  color: #2c2c21;
  border-radius: 12px;
  border: none;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 1.01rem;
  font-weight: 700;
  padding: 0.33rem 1.17rem;
  transition: background .14s, color .13s, box-shadow .14s;
  box-shadow: 0 2px 8px 0 rgba(120,140,190,0.09);
  cursor: pointer;
  margin: 5px 0;
  position: relative;
  white-space: nowrap;
}
.uretim-step-btn:hover, .uretim-step-btn:focus {
  background: linear-gradient(90deg, #f2e5be 0%, #cbd8f3 100%);
  color: #3560bd;
  box-shadow: 0 6px 18px 0 rgba(120,140,190,0.17);
  outline: none;
}
.uretim-step-ok {
  display: flex;
  align-items: center;
  margin: 0 3px;
  z-index: 1;
}
.uretim-step-ok svg {
  width: 34px;
  height: 14px;
  color: #d6b739;
  stroke-width: 5px;
  stroke: #d6b739;
  fill: none;
  vertical-align: middle;
}
#tab-uretim .bolum-baslik {
  font-family: 'Oswald',sans-serif;
  font-size:2.2rem;
  color: #3560bd;
  font-weight: 800;
  border-radius: 18px;
  padding: 1.2em 1.3em .9em 1.3em;
  margin-bottom:2.2rem;
  box-shadow:0 6px 36px 0 rgba(44, 83, 180, 0.10);
  text-align:center;
  text-shadow:0 2px 8px #e6eefd;
  letter-spacing:.03em;
}
.bolum-baslik {
  background: none;
  box-shadow: none;
}
/* Soft glassy tablar */
.uretim-tabs-row {
  display:flex; gap:15px; justify-content:center; margin-bottom:1.6rem;
  flex-wrap:wrap;
}
.uretim-tab-btn {
  position:relative;
  appearance:none;
  outline:none;
  border:none;
  font-family:'Oswald',Arial,sans-serif;
  font-size:1.17rem;
  font-weight:700;
  padding:.86em 2.2em .86em 2.6em;
  border-radius:18px;
  background:
    linear-gradient(90deg,#e0e7fa88 0%, #ede9decc 100%);
  color: #2857ad;
  box-shadow:0 4px 16px 0 #d8e5ef77;
  backdrop-filter:blur(7px) saturate(130%);
  transition:all .19s cubic-bezier(.47,1.7,.39,.88);
  letter-spacing:.07em;
  border:2.6px solid transparent;
  margin-bottom:0;
  cursor:pointer;
  min-width: 140px;
  display:flex;
  gap:.5em;
  align-items:center;
}
.uretim-tab-btn:hover, .uretim-tab-btn:focus {
  color: #fff;
  background:linear-gradient(98deg,#bad0fc66 0%, #fefae28f 88%);
  box-shadow:0 10px 30px 0 #c5d9ff55, 0 2px 8px #e2e6ec11;
}

.uretim-tab-btn:focus,
.uretim-tab-btn:active,
.uretim-tab-btn:focus-visible {
  outline: none !important;
  box-shadow: none !important;
  color: #000000;
}
.uretim-tab-btn .uretim-ikon {
  font-size:1.27em; 
  opacity:.82;
  margin-right:.25em;
  margin-top:-2px;
  display:inline-block;
  filter:drop-shadow(0 1px 0 #eef6ff77);
}

/* ---- Modal ve File List ---- */
.modal-xl { --bs-modal-width:950px; }
#modalUretim .file-list { max-height:180px; overflow:auto; }

#geriRadyalBtn {
  float: none !important;     /* Bootstrap float'ı devreden çıkar */
  display: block;             /* Tam satır kaplasın */
  margin-left: 0;
  margin-bottom: 8px;
}
#modalContentGenel > .row {
  justify-content: center !important;
}


/* ---- Responsive Break Points ---- */
@media (max-width:820px){
  .uretim-steps-row { flex-wrap: wrap; }
  .uretim-step-btn { font-size:0.98rem; padding:.28rem 0.87rem;}
  .uretim-step-ok svg { width:22px; height:10px; }
}

/* -- <600px: Tüm süreç adımları ve menüler dikeyleşiyor, paddings/küçülüyor -- */
@media (max-width:600px){
  .container-navbar { flex-wrap: wrap; justify-content: flex-end; }
  #projectName {
    flex: 0 0 70%;
    font-size: 17px !important; max-width: 65%; min-width: 0; margin-right: 0;
    white-space: nowrap; overflow: hidden; text-overflow: ellipsis; text-align: left;
  }
  #buttonHome { flex: 0 0 30px; padding: 0; margin-left: 0; display: flex; align-items: center;}
  .img-fluid { height: 28px; width: 28px; margin-right: 0; margin-left: 0; }
  .custom-btn { font-size: 12px; padding: 5px 10px; border-radius: 6px; color: #fff; border: none; margin-right: 12px; font-weight: 500; }
  .navbar-toggler { background-color: #c2c5c9; flex: 0 0 auto; margin-left: auto; justify-content: flex-end;}
  .container-fluid { flex-wrap: wrap; }
  .custom-short-menu {
    gap: 12px; width: 90%!important; margin-top: 12px; margin-left:auto; margin-right:auto;
  }
  .menu-btn { flex: 1 1 0; min-width: 0; }
  .menu-btn img { width: 25px; height: 25px; margin-bottom: 4px;}
  .menu-btn span { font-size: 0.8rem; white-space: nowrap; text-align: center;}
  .flow-steps-container { flex-direction: column; gap: .1em; }
  .flow-step-arrow { transform: rotate(90deg); height: 24px; }
  .flow-step-arrow svg { width: 22px; height: 20px; }
  .flow-step-btn { width: 100%; justify-content: center; }
  .surec-title { font-size: 1.5em; margin-bottom: 10px; }
  #tab-uretim .bolum-baslik { font-size:1.29rem; padding:.9em .33em .7em .33em; }
  .uretim-tabs-row{ gap:7px;}
  .uretim-tab-btn{ font-size:1.01rem; padding:.6em 1em .66em 1.4em; border-radius:13px; min-width:94px;}
  .uretim-tab-btn .uretim-ikon {font-size:1em;}
  .evrak-ekle-btn { font-size: 0.9rem; padding: 0.6rem 1.4rem;}
  .alt-baslik-kutu{font-size:0.95rem; padding:.75rem 1.1rem;}

  #geriRadyalBtn {
    float: right !important;  /* Büyük ekranda sağa geçebilir */
    display: inline-block;
    margin-left: auto;
    margin-bottom: 10px !important;
  }
  #modalContentGenel > .row > .col-lg-7,
  #modalContentGenel > .row > .col-lg-5 {
    padding-left: 0 !important;
    padding-right: 0 !important;
    align-items: center;
  }
  #modalContentGenel .card {
    width: 90vw;
  }
}

/* --- Ekstra - Scrollbarlarını yumuşatmak isteyenler için (isteğe bağlı) --- */
.er-kutular, .file-list { scrollbar-width: thin; scrollbar-color: #bfcfe5 #fafafa;}
.er-kutular::-webkit-scrollbar, .file-list::-webkit-scrollbar { width:7px; background:#fafafa;}
.er-kutular::-webkit-scrollbar-thumb, .file-list::-webkit-scrollbar-thumb { background: #bfcfe5; border-radius: 6px;}
</style>
</head>  
<body>  

    <!-- Responsive Header -->  
    <nav class="header d-flex justify-content-between align-items-center px-3">
        <span class="d-flex align-items-center gap-2">
            <img src="img/icon.png" alt="Logo" width="32" height="32">
            Yapıo
        </span>
        <button class="btn custom-btn" id="loginButton" style="display: none;">PROJELER</button>  
    </nav>

    <!-- Navbar -->  
    <nav class="navbar navbar-expand-lg navbar-light bg-light sticky-top shadow-sm mt-4 container-navbar">  
        <div class="container-fluid">  
            <!-- Proje Adı -->  
            <h4 class="navbar-brand" id="projectName">Proje Adı</h4>  
            <!-- Ana Sayfa Butonu -->  
            <button class="btn d-flex navbar-home-button" id="buttonHome">  
                <img src="img/home1_1.png" alt="Katlar Görseli" class="img-fluid rounded">  
            </button>
        </div>  
    </nav> 

    <div class="custom-short-menu" id="regulation-button-area">
        <a class="menu-btn" id="quatation-button" href="#">
            <img src="img/pay1_1.png" alt="">
            <span>Giderler</span>
        </a>
        <a class="menu-btn" id="graphs-button" href="#">
            <img src="img/growth_1.png" alt="">
            <span>Analizler</span>
        </a>
        <a class="menu-btn" id="sold-button" href="#">
            <img src="/img/property.png" alt="">
            <span>Satış</span>
        </a>
    </div>

    <div id="loader" style="display:none;">
        <div class="spinner"></div>
        <span>Yükleniyor...</span>
    </div>

    <div class="container pt-3 pb-4">  
      <div class="surec-title">Yapı Üretim Süreci</div>  
      <div class="flow-steps-container">
        <button class="flow-step-btn active" data-tab="evrak">
          Evrak İşleri
        </button>
        <span class="flow-step-arrow">
          <svg viewBox="0 0 24 24">
            <polyline points="4,12 20,12"/>
            <polyline points="16,7 20,12 16,17"/>
          </svg>
        </span>
        <button class="flow-step-btn" data-tab="ruhsat">
          Yapı Ruhsatı
        </button>
        <span class="flow-step-arrow">
          <svg viewBox="0 0 24 24">
            <polyline points="4,12 20,12"/>
            <polyline points="16,7 20,12 16,17"/>
          </svg>
        </span>
          <button class="flow-step-btn" data-tab="uretim">
            Üretim
          </button>
        </div>
      </div>

    <!-- Evrak İşleri Bölümü -->  
    <div class="surec-section mb-4 active" id="tab-evrak">  
  <div class="bolum-baslik">Evrak İşleri</div>  
  <div class="er-kutular">  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🏛️</span>  
      Belediye  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Belediye" data-detay="Aflikasyon">Aflikasyon</li>  
        <li data-kurum="Belediye" data-detay="İmar durumu">İmar durumu</li>  
        <li data-kurum="Belediye" data-detay="Kanal kotu">Kanal kotu</li>  
        <li data-kurum="Belediye" data-detay="Ruhsat harcı">Ruhsat harcı</li>  
        <li data-kurum="Belediye" data-detay="Zemin etüdü harcı">Zemin etüdü harcı</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🖋️</span>  
      Noter  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Noter" data-detay="Müteahhitlik sözleşmesi">Müteahhitlik sözleşmesi</li>  
        <li data-kurum="Noter" data-detay="Vekalet sözleşmesi">Vekalet sözleşmesi</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🏗️</span>  
      Yapı Denetim  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Yapı Denetim" data-detay="Yapı denetim harcı">Yapı denetim harcı</li>  
        <li data-kurum="Yapı Denetim" data-detay="Fenni Jüri">Fenni Jüri</li>  
        <li data-kurum="Yapı Denetim" data-detay="Fenni harita/g">Fenni harita/g</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🌎</span>  
      Zemin Etüdü  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Zemin Etüdü" data-detay="Zemin etüdü raporu">Zemin etüdü raporu</li>  
        <li data-kurum="Zemin Etüdü" data-detay="Zemin iyileştirme">Zemin iyileştirme</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">📁</span>  
      Projeler  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Projeler" data-detay="Mimari">Mimari</li>  
        <li data-kurum="Projeler" data-detay="Statik">Statik</li>  
        <li data-kurum="Projeler" data-detay="Elektrik">Elektrik</li>  
        <li data-kurum="Projeler" data-detay="Tesisat">Tesisat</li>  
        <li data-kurum="Projeler" data-detay="HES">HES</li>  
        <li data-kurum="Projeler" data-detay="Akustik">Akustik</li>  
        <li data-kurum="Projeler" data-detay="Asansör">Asansör</li>  
      </ul>  
    </div>  
  </div>  
</div>

    <!-- Yapı Ruhsatı Bölümü -->  
    <div class="surec-section" id="tab-ruhsat">  
      <div class="bolum-baslik">Yapı Ruhsatı</div>  
      <button class="evrak-ekle-btn">Evrak Ekle</button>  
    </div>  

    <!-- Üretim Bölümü -->
    <div class="surec-section mb-4" id="tab-uretim">
      <div class="bolum-baslik">Üretim</div>
      <div class="uretim-tabs-row">
        <button id="btnKaba" class="uretim-tab-btn active"><span class="uretim-ikon">🧱</span> Kaba Üretim</button>
        <button id="btnInce" class="uretim-tab-btn"><span class="uretim-ikon">🎨</span> İnce Üretim</button>
      </div>

      <!-- Kaba Üretim Adımları -->
    <div class="uretim-kategori" id="kabaUretim" style="display:block;">
      <div class="uretim-steps-row w-100 mx-auto" style="max-width:980px;"></div>
    </div>
    <!-- İnce Üretim Adımları (boş şablon) -->
    <div class="uretim-kategori" id="inceUretim" style="display:none;">
      <div class="uretim-steps-row w-100 mx-auto" style="max-width:980px;justify-content:center;">
          <span style="font-family:'Varela Round', Arial,sans-serif;color:#7b8399;font-size:1.13rem;opacity:0.8;">İnce üretim adımları burada listelenecek…</span>
      </div>
    </div>
  </div>


    <!-- Dinamik Modal -->
<div class="modal fade" id="modalUretim" tabindex="-1" aria-labelledby="modalUretimLabel" aria-hidden="true">  
  <div class="modal-dialog modal-xl modal-dialog-scrollable">  
    <div class="modal-content" style="border-radius:19px;">  
      <div class="modal-header bg-primary text-white">  
        <h5 class="modal-title" id="modalUretimLabel">  
          <span id="modalBaslikIkon"></span>  
          <span id="modalBaslikText"></span>  
        </h5>  
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>  
      </div>  
      <div class="modal-body pb-1">  
        <div id="modalContentGenel"></div>  
      </div>  
    </div>  
  </div>  
</div>   

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script>
    const projectNameString = document.getElementById("projectName");
    const quatationButton = document.getElementById("quatation-button"); 
    const graphsButton = document.getElementById("graphs-button");
    const soldButton = document.getElementById("sold-button");
    const buttonHome = document.getElementById("buttonHome");
    const imageInput = document.getElementById('modalImageInput');
    const previewArea = document.getElementById('modalPreviewArea');
    const btn = document.getElementById('modalToPdfBtn');
    let imgDataUrl = null;
    const btnKaba = document.getElementById('btnKaba');
    const btnInce = document.getElementById('btnInce');
    const kabaUretim = document.getElementById('kabaUretim');
    const inceUretim = document.getElementById('inceUretim');

    let userId = null;
    let projectName = null;
    let building = null;
    let floorsDataFromDb = null;
    

    // DOM yüklendiğinde işlem başlat  
    document.addEventListener("DOMContentLoaded", () => { 

        window.user = {{#if user}}
        { "email": "{{user.email}}", "role": "{{user.role}}", "userId": "{{user.id}}", "project": {{{json project}}} }
        {{else}}
            { "role": "{{role}}" }
        {{/if}};

        userId = window.user.userId;
        const projectNameDb = window.user.project.projectName;
        projectName = projectNameDb;
        if(projectName){
            const projectNameText = projectNameDb.toUpperCase();
            projectNameString.textContent = projectNameText;
        }
        if(userId){
            loginButton.style.display = "block";
        } else{
            loginButton.style.display = "none";
        }

        const urlParams = new URLSearchParams(window.location.search);  
        const cameFrom = urlParams.get('from');  
        if (cameFrom) {  
            fromControl = true;
            regulationButtonMobileArea.style.display = "none";
            regulationButtonArea.style.display = "none";
        }
 
        // İlk açılışta Kaba Üretim açık başlasın
        toggleTab(true);

        // Buton tıklama
        btnKaba.addEventListener('click', function() { toggleTab(true); });
        btnInce.addEventListener('click', function() { toggleTab(false); });
    });


    // Sekmeler arasında geçiş (Kaba & İnce Üretim)
    function toggleTab(showKaba) {
      if (showKaba) {
        kabaUretim.style.display = 'block';
        inceUretim.style.display = 'none';
        btnKaba.classList.add('active');
        btnInce.classList.remove('active');
      } else {
        kabaUretim.style.display = 'none';
        inceUretim.style.display = 'block';
        btnInce.classList.add('active');
        btnKaba.classList.remove('active');
      }
    }

    // (Eğer birden fazla flow sekmesi varsa kullan)
    // Flow tab switch
    document.querySelectorAll('.flow-step-btn').forEach(function(tab){
      tab.addEventListener('click', function(){
          document.querySelectorAll('.flow-step-btn').forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          const sectionId = 'tab-' + this.getAttribute('data-tab');
          document.querySelectorAll('.surec-section').forEach(sec => sec.classList.remove('active'));
          document.getElementById(sectionId).classList.add('active');
      });
    });

    // ============ Accordion ==================
document.querySelectorAll('.alt-baslik-kutu').forEach(function(header) {
  header.addEventListener('click', function(){
    // Kapatılacak içerik, başlığın hemen sonraki kardeşidir:
    const content = header.nextElementSibling;

    const isOpen = header.getAttribute('aria-expanded') === 'true';

    // Tüm başlık ve içerikleri kapat
    document.querySelectorAll('.alt-baslik-kutu').forEach(h => {
      h.setAttribute('aria-expanded', 'false');
      h.querySelector('.alt-kutu-arrow').innerHTML = "&#9654;"; // Sağ ok
    });
    document.querySelectorAll('.alt-kutu-icerik').forEach(c => c.style.display = 'none');

    // Eğer tıklanan zaten açıksa KAPALI bırak, değilse AÇ
    if(!isOpen){
      header.setAttribute('aria-expanded','true');
      content.style.display = 'block';
      header.querySelector('.alt-kutu-arrow').innerHTML = "&#9660;"; // Aşağı ok (isteğe bağlı)
    }
  });

  // Klavye ile de çalışsın:
  header.addEventListener('keydown', function(e){
    if(e.key === "Enter" || e.key === " ") { 
      e.preventDefault(); header.click();
    }
  });
});

// Sayfa ilk yüklendiğinde tüm içerikler kapalı olsun:
document.querySelectorAll('.alt-kutu-icerik').forEach(c => c.style.display = 'none');


let aktifEvrakKurum = null, aktifEvrakDetay = null, aktifEvrakKey = null;
// ============ Alt Liste <li> Click - Modal ==================
document.querySelectorAll('.alt-kutu-icerik li').forEach(function(item) {
  item.style.cursor = 'pointer';
  item.addEventListener('click', function() {
    aktifAdimId = null; // Kaba Üretimden ayırt!
    aktifAltKalem = null;
    aktifEvrakKurum = this.getAttribute('data-kurum') || '';
    aktifEvrakDetay = this.getAttribute('data-detay') || this.innerText.trim();
    aktifEvrakKey = `evrak:${aktifEvrakKurum}:${aktifEvrakDetay}`;

    document.getElementById('modalBaslikIkon').textContent = ikonBul(aktifEvrakKurum);
    document.getElementById('modalBaslikText').textContent = aktifEvrakKurum + ' - ' + aktifEvrakDetay;

    showOdemeEvrakForm(false, true); // (isRadyal=false, isEvrakIsleri=true)
    bootstrap.Modal.getOrCreateInstance(document.getElementById('modalUretim')).show();
  });
});
function ikonBul(kurum) {
  switch (kurum) {
    case 'Belediye': return '🏛️';
    case 'Noter': return '🖋️';
    case 'Yapı Denetim': return '🏗️';
    case 'Zemin Etüdü': return '🌎';
    case 'Projeler': return '📁';
    default: return '';
  }
}

    // Kaba Üretim Adımları - TAM LİSTE
const URETIM_ADIMLARI = [
  { id: 'santiyeKurma',  ad: "Şantiye kurma",                     icon: "fa-hard-hat"         },
  { id: 'temelKazma',    ad: "Temel kazma",                       icon: "fa-mountain-sun"     },
  { id: 'groBeton',      ad: "Gro beton",                         icon: "fa-bricks"           },
  { id: 'radyalTemel',   ad: "Radyal Temel",                      icon: "fa-cube"             },
  { id: 'perdeBetonu',   ad: "Perde betonu",                      icon: "fa-border-all"       },
  { id: 'temelIzolasyon',ad: "Temel izolasyonu",                  icon: "fa-shield-halved"    },
  { id: 'dolgu',         ad: "Dolgu",                             icon: "fa-road"             },
  { id: 'subasman',      ad: "Subasman",                          icon: "fa-square-poll-horizontal"},
  { id: 'zeminBetonu',   ad: "Zemin betonu",                      icon: "fa-th-large"         },
  { id: 'katBetonlari',  ad: "1-2-3-4. kat betonları",            icon: "fa-layer-group"      },
  { id: 'kapamaBetonu', ad: "Kapama betonu",                      icon: "fa-layer-minus"      },
  { id: 'catiUygulama',  ad: "Çatı uygulamaları",                 icon: "fa-house-chimney"    },
  { id: 'kapanmaBetonu', ad: "Kapanma betonu",                    icon: "fa-layer-minus"      },
  { id: 'duvarOrme',     ad: "Duvar örme",                        icon: "fa-grip-lines-vertical"},
  { id: 'sap',            ad: "ŞAP",                              icon: "fa-fill"    }
];

const RADYAL_ALTKALEM = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna" },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain" },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square" },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack" },
  { id:"diger",   ad:"Diğer",   icon:"fa-ellipsis" }
];
const TEMEL_IZALASYONU = [
  { id:"su_tutucu_bant",    ad:"Su Tutucu Bant",    icon:"fa-tape" },                   // veya "fa-tape", "fa-grip-lines"
  { id:"mebran",            ad:"Mebran",            icon:"fa-layer-group" },           // katman mantığı için
  { id:"likit_mebran",      ad:"Likit Mebran",      icon:"fa-tint" },                  // sıvı/sembol için
  { id:"drenaj_levhasi",    ad:"Drenaj Levhası",    icon:"fa-water" },                 // su/drenaj imajı için
  { id:"diger",             ad:"Diğer",             icon:"fa-ellipsis" }
];
const SU_BASMAN = [
  { id:"celik_hasir",       ad:"Çelik Hasır",       icon:"fa-border-all" },                   
  { id:"beton",             ad:"Beton",             icon:"fa-mountain" },
  { id:"diger",             ad:"Diğer",             icon:"fa-ellipsis" }
];
const ZEMIN_BETONU = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna" },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain" },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square" },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack" },
  { id:"diger",   ad:"Diğer",   icon:"fa-ellipsis" }
];
const KAT_BETONLARI = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna" },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain" },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square" },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack" },
  { id:"diger",   ad:"Diğer",   icon:"fa-ellipsis" }
];
const CATI = [
  { id:"kereste",             ad:"Kereste",             icon:"fa-tree" },
  { id:"osb",                 ad:"OSB",                 icon:"fa-layer-group" },
  { id:"cati_izalasyonu",     ad:"Çatı İzalasyonu",     icon:"fa-fill-drip" },
  { id:"kiremit",             ad:"Kiremit",             icon:"fa-th" },
  { id:"diger",               ad:"Diğer",               icon:"fa-ellipsis" }
];
const KAPAMA_BETONU = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna" },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain" },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square" },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack" },
  { id:"diger",   ad:"Diğer",   icon:"fa-ellipsis" }
];
const SAP = [
  { id:"kum",       ad:"Kum",     icon:"fa-mound" },
  { id:"cimento",   ad:"Çimento", icon:"fa-cube" },
  { id:"diger",     ad:"Diğer",   icon:"fa-ellipsis" }
];

// Her kombinasyonda ayrı veri
const odemeData = {};
const evrakData = {};

let aktifAdimId = null, aktifAltKalem = null;

// Adım butonlarını oluştur
const stepsRowEl = document.querySelector('.uretim-steps-row');
stepsRowEl.innerHTML = '';
URETIM_ADIMLARI.forEach((adim, idx) => {
  const btn = document.createElement('button');
  btn.type = "button";
  btn.className = "uretim-step-btn btn btn-outline-primary";
  btn.setAttribute('data-adimid', adim.id);
  btn.innerHTML = `<i class="fa-solid ${adim.icon} me-1"></i>${adim.ad}`;
  stepsRowEl.appendChild(btn);

  // Eğer son adım değilse ok ekle
  if (idx < URETIM_ADIMLARI.length - 1) {
    const ok = document.createElement('span');
    ok.className = "uretim-step-ok";
    ok.innerHTML = `<svg class="uretim-ok-svg" viewBox="0 0 34 24"><polyline points="2,12 28,12"/><polyline points="22,6 28,12 22,18"/></svg>`;
    stepsRowEl.appendChild(ok);
  }
});

// --- Modal: Adıma tıklayınca açılır ---
document.querySelectorAll('.uretim-step-btn').forEach(btn => {  
  btn.addEventListener('click', function(){  
    aktifAdimId = btn.getAttribute('data-adimid');  
    aktifAltKalem = null;  
    const adim = URETIM_ADIMLARI.find(a=>a.id===aktifAdimId);  
    document.getElementById('modalBaslikIkon').innerHTML = `<i class="fa-solid ${adim.icon} me-1"></i>`;  
    document.getElementById('modalBaslikText').textContent = adim.ad;  
    if(aktifAdimId==='radyalTemel'){  
      showRadyalKalemler();  
    } else if(aktifAdimId==='perdeBetonu'){
      showPerdeKalemler();
    } else if(aktifAdimId==='temelIzolasyon'){
      showTemelIzalasyonuKalemler();
    } else if(aktifAdimId==='subasman'){
      showSuBasmanKalemler();
    } else if(aktifAdimId==='zeminBetonu'){
      showZeminBetonuKalemler();
    } else if(aktifAdimId==='katBetonlari'){
      showKatBetonlariKalemler();
    } else if(aktifAdimId==='catiUygulama'){
      showCatiKalemler();
    } else if(aktifAdimId==='kapamaBetonu'){
      showKapamaBetonuKalemler();
    } else if(aktifAdimId==='sap'){
      showSapKalemler();
    }
    else {  
      showOdemeEvrakForm();  
    }  
    bootstrap.Modal.getOrCreateInstance(document.getElementById('modalUretim')).show();  
  });  
});  

// 1. Radyal Temel alt kalemlerini butonla göster:
function showRadyalKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Radyal Temel - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="radyalKalemBtnGrup">${  
        RADYAL_ALTKALEM.map(kal =>  
          `<button type="button" class="btn btn-outline-primary radyal-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="radyalAltKalemForm"></div>`;  

  document.querySelectorAll('.radyal-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Radyal Temel - "+ RADYAL_ALTKALEM.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showRadyalKalemler);
    }  
  });  
}
function showPerdeKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Perde Beton - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="perdeKalemBtnGrup">${  
        RADYAL_ALTKALEM.map(kal =>  
          `<button type="button" class="btn btn-outline-primary perde-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="perdeAltKalemForm"></div>`;  

  document.querySelectorAll('.perde-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Perde Beton - "+ RADYAL_ALTKALEM.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showPerdeKalemler);
    }  
  });  
}
function showTemelIzalasyonuKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Temel İzalasyonu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="temelIzalasyonKalemBtnGrup">${  
        TEMEL_IZALASYONU.map(kal =>  
          `<button type="button" class="btn btn-outline-primary temel_izalasyon-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="temelIzalasyonAltKalemForm"></div>`;  

  document.querySelectorAll('.temel_izalasyon-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Temel İzalasyonu - "+ TEMEL_IZALASYONU.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showTemelIzalasyonuKalemler);
    }  
  });  
}
function showSuBasmanKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Subasman - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="subasmanKalemBtnGrup">${  
        SU_BASMAN.map(kal =>  
          `<button type="button" class="btn btn-outline-primary subasman-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="subasmanAltKalemForm"></div>`;  

  document.querySelectorAll('.subasman-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Subasman - "+ SU_BASMAN.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showSuBasmanKalemler);
    }  
  });  
}
function showZeminBetonuKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Zemin Betonu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="zeminBetonuKalemBtnGrup">${  
        ZEMIN_BETONU.map(kal =>  
          `<button type="button" class="btn btn-outline-primary zemin-betonu-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="zeminBetonuAltKalemForm"></div>`;  

  document.querySelectorAll('.zemin-betonu-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Zemin Betonu - "+ ZEMIN_BETONU.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showZeminBetonuKalemler);
    }  
  });  
}
function showKatBetonlariKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Kat Betonları - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="katBetonlariKalemBtnGrup">${  
        KAT_BETONLARI.map(kal =>  
          `<button type="button" class="btn btn-outline-primary kat-betonlari-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="katBetonlariAltKalemForm"></div>`;  

  document.querySelectorAll('.kat-betonlari-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Kat Betonları - "+ KAT_BETONLARI.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showKatBetonlariKalemler);
    }  
  });  
}
function showCatiKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Çatı - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="catiKalemBtnGrup">${  
        CATI.map(kal =>  
          `<button type="button" class="btn btn-outline-primary cati-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="catiAltKalemForm"></div>`;  

  document.querySelectorAll('.cati-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Çatı - "+ CATI.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showCatiKalemler);
    }  
  });  
}
function showKapamaBetonuKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Kapama Betonu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="kapamaBetonuKalemBtnGrup">${  
        KAPAMA_BETONU.map(kal =>  
          `<button type="button" class="btn btn-outline-primary kapama-betonu-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="kapamaBetonuAltKalemForm"></div>`;  

  document.querySelectorAll('.kapama-betonu-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Kapama Betonu - "+ KAPAMA_BETONU.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showKapamaBetonuKalemler);
    }  
  });  
}
function showSapKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">ŞAP - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="sapKalemBtnGrup">${  
        SAP.map(kal =>  
          `<button type="button" class="btn btn-outline-primary sap-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="sapAltKalemForm"></div>`;  

  document.querySelectorAll('.sap-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "ŞAP - "+ SAP.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showSapKalemler);
    }  
  });  
}



// 2. Ödeme/Evrak Formu
function showOdemeEvrakForm(isRadyal=false, isEvrakIsleri=false, geriHandler=null){
  // Başlık ve anahtar belirleme
  let alanAciklamasi = '';
  if(isEvrakIsleri) {
    alanAciklamasi = `<div class="alert alert-info py-2 mb-2"> <b>${aktifEvrakKurum} - ${aktifEvrakDetay}</b> işlemi için ödeme ve evrak ekleyin.</div>`;
  }

  document.getElementById('modalContentGenel').innerHTML = `
    ${isRadyal? `  
    <div class="mb-2">  
      <button type="button" class="btn btn-link btn-sm ps-0 mb-2" id="geriRadyalBtn">  
        <i class="fa fa-chevron-left"></i> Alt Kalemler  
      </button>  
    </div>` : ''}
    ${alanAciklamasi}
    <div class="rowg">
      <div class="colg">
        <div class="card shadow-sm mb-3 w-100">
          <div class="card-header bg-light">
            <b class="text-primary"><i class="fa-solid fa-coins"></i> Ödeme Kayıtları</b>
          </div>
          <div class="card-body">
            <form id="odemeFormDinamik">
              <div class="row g-2">
                <div class="col-md-5">
                  <input type="text" class="form-control" id="odemeAciklama" placeholder="Açıklama" maxlength="100" required>
                </div>
                <div class="col-md-3">
                  <input type="number" class="form-control" id="odemeTutar" placeholder="Tutar (TL)" min="1" required>
                </div>
                <div class="col-md-4">
                  <input type="date" class="form-control" id="odemeTarih" required>
                </div>
              </div>
              <div class="d-flex justify-content-end mt-2">
                <button type="submit" class="btn btn-success btn-sm"><i class="fa-solid fa-plus"></i> Kaydet</button>
              </div>
            </form>
            <div class="table-responsive mt-3">
              <table class="table table-striped table-hover align-middle small shadow-sm rounded" id="odemeTablosu">
                <thead class="table-primary">
                  <tr>
                    <th>#</th>
                    <th>Açıklama</th>
                    <th>Tutar (TL)</th>
                    <th>Tarih</th>
                    <th>İşlem</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
              <div id="odemeBosMesaj" class="text-center text-secondary mt-3" style="display:none;">Henüz ödeme kaydı girilmemiş.</div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-lg-5 col-12 d-flex flex-column align-items-center mx-auto">
        <div class="card shadow-sm mb-3 w-100">
          <div class="card-header bg-light">
            <b class="text-primary"><i class="fa-solid fa-paperclip"></i> Evrak Yükle</b>
          </div>
          <div class="card-body pt-3 pb-2">
            <form id="evrakFormDinamik">
              <div class="input-group mb-2">
                <input type="file" class="form-control" id="evrakDosya" required>
              </div>
              <div class="mb-2">
                <input type="text" class="form-control" id="evrakAciklama" maxlength="100" placeholder="Açıklama (opsiyonel)">
              </div>
              <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-primary btn-sm"><i class="fa-solid fa-upload"></i> Yükle</button>
              </div>
            </form>
            <hr>
            <div>
              <h6 class="mb-1 text-secondary">Yüklenen Evraklar:</h6>
              <ul class="list-group file-list" id="evrakListesi" style="font-size:0.97rem;"></ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
  // Geri butonu olayı
  if(isRadyal && typeof geriHandler === 'function') {
    document.getElementById('geriRadyalBtn').onclick = geriHandler;
  }
  document.getElementById('odemeFormDinamik').onsubmit = odemeFormSubmit;
  document.getElementById('evrakFormDinamik').onsubmit = evrakFormSubmit;
  tabloGuncelleDinamik(isEvrakIsleri);
  evrakGuncelleDinamik(isEvrakIsleri);
}  
// -- Dinamik ödemeler
function odemeFormSubmit(e){
  e.preventDefault();
  const aciklama = document.getElementById('odemeAciklama').value.trim();
  const tutar = Number(document.getElementById('odemeTutar').value);
  const tarih = document.getElementById('odemeTarih').value;
  let key;
  if(aktifAdimId){
    key = aktifAltKalem ? aktifAdimId+"_"+aktifAltKalem : aktifAdimId;
  } else if(aktifEvrakKey) {
    key = aktifEvrakKey;
  }
  if(aciklama && tutar > 0 && tarih) {
    if(!odemeData[key]) odemeData[key] = [];
    odemeData[key].push({ id:Date.now(), aciklama, tutar, tarih });
    tabloGuncelleDinamik(!!aktifEvrakKey);
    e.target.reset();
  }
}
function tabloGuncelleDinamik(isEvrakIsleri) {
  const tbody = document.querySelector('#odemeTablosu tbody');
  let key;
  if(aktifAdimId){
    key = aktifAltKalem ? aktifAdimId+"_"+aktifAltKalem : aktifAdimId;
  } else if(aktifEvrakKey) {
    key = aktifEvrakKey;
  }
  const veri = odemeData[key] || [];
  tbody.innerHTML = '';
  if(veri.length === 0){
    document.getElementById('odemeBosMesaj').style.display = '';
    document.getElementById('odemeTablosu').style.display = 'none';
  } else {
    document.getElementById('odemeBosMesaj').style.display = 'none';
    document.getElementById('odemeTablosu').style.display = '';
    veri.forEach((o,idx) => {
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td>${idx+1}</td>
        <td>${o.aciklama}</td>
        <td>${o.tutar}</td>
        <td>${o.tarih}</td>
        <td>
          <button class="btn btn-sm btn-danger" title="Sil" onclick="silOdemeDinamik('${key}',${o.id},${isEvrakIsleri})"><i class="fa-solid fa-trash"></i></button>
        </td>
      `;
      tbody.appendChild(tr);
    });
  }
}
function silOdemeDinamik(key, id, isEvrakIsleri) {
  if(confirm("Silinsin mi?")){
    odemeData[key] = (odemeData[key]||[]).filter(o=>o.id!==id);
    tabloGuncelleDinamik(isEvrakIsleri);
  }
}

function evrakFormSubmit(e){
  e.preventDefault();
  const dosyaInput = document.getElementById('evrakDosya');
  const dosya = dosyaInput.files[0];
  if (!dosya) return;
  const aciklama = document.getElementById('evrakAciklama').value.trim();

  let key;
  if(aktifAdimId){
    key = aktifAltKalem ? aktifAdimId+"_"+aktifAltKalem : aktifAdimId;
  } else if(aktifEvrakKey) {
    key = aktifEvrakKey;
  }

  if (!evrakData[key]) evrakData[key] = [];
  evrakData[key].push({
    id: Date.now(),
    dosyaAdi: dosya.name,
    aciklama,
    dosyaUrl: URL.createObjectURL(dosya)
  });
  evrakGuncelleDinamik(!!aktifEvrakKey);
  e.target.reset();
}
function evrakGuncelleDinamik(isEvrakIsleri) {
  const ul = document.getElementById('evrakListesi');
  let key;
  if(aktifAdimId){
    key = aktifAltKalem ? aktifAdimId+"_"+aktifAltKalem : aktifAdimId;
  } else if(aktifEvrakKey) {
    key = aktifEvrakKey;
  }
  const veri = evrakData[key] || [];
  ul.innerHTML = '';
  if (veri.length === 0) {
    ul.innerHTML = `<li class="list-group-item text-secondary">Evrak yüklenmemiş.</li>`;
  } else {
    veri.forEach(ev => {
      const li = document.createElement('li');
      li.className = "list-group-item d-flex justify-content-between align-items-center";
      li.innerHTML = `
        <span>
          <i class="fa-solid fa-file-arrow-down me-1"></i>
          <b>${ev.dosyaAdi}</b>
          <small class="text-muted">${ev.aciklama||''}</small>
          <a href="${ev.dosyaUrl}" download="${ev.dosyaAdi}" class="btn btn-link btn-sm px-0" title="İndir"><i class="fa fa-download"></i></a>
        </span>
        <button class="btn btn-outline-danger btn-sm" title="Sil" onclick="silEvrakDinamik('${key}',${ev.id},${isEvrakIsleri})"><i class="fa-solid fa-trash"></i></button>
      `;
      ul.appendChild(li);
    });
  }
}
function silEvrakDinamik(key, id, isEvrakIsleri) {
  evrakData[key] = (evrakData[key]||[]).filter(o=>o.id!==id);
  evrakGuncelleDinamik(isEvrakIsleri);
}

    quatationButton.addEventListener("click", () => {
        window.location.href = `/quatation?projectName=${encodeURIComponent(projectName)}`;
    });
    graphsButton.addEventListener("click", () => {
        window.location.href = `/analiz?projectName=${encodeURIComponent(projectName)}`;
    });
    soldButton.addEventListener("click", () => {
        window.location.href = `/sold?projectName=${encodeURIComponent(projectName)}`;
    });
    buttonHome.addEventListener("click", () => {  
        window.location.href = `/draw?projectName=${encodeURIComponent(projectName)}`;
    });


    /*
const imageInput = document.getElementById('modalImageInput');
const previewArea = document.getElementById('modalPreviewArea');
const btn = document.getElementById('modalToPdfBtn');
let imgDataUrl = null;

// Modal temizleme fonksiyonu (kapatınca resetle)
function clearModalFields() {
  imageInput.value = '';
  previewArea.innerHTML = '<span style="color:#bbb;">Seçilen görsel burada görünecek</span>';
  btn.disabled = true;
  imgDataUrl = null;
}

// Modal açılırken ve kapanırken temizleyelim
const modalEl = document.getElementById('imageToPdfModal');
modalEl.addEventListener('hidden.bs.modal', clearModalFields);
modalEl.addEventListener('show.bs.modal', clearModalFields);

// Dosya seçimi:
imageInput.addEventListener('change', function () {
  const file = this.files[0];
  imgDataUrl = null;
  previewArea.innerHTML = '';
  btn.disabled = true;
  if (!file) {
    previewArea.innerHTML = '<span style="color:#bbb;">Seçilen görsel burada görünecek</span>';
    return;
  }
  const reader = new FileReader();
  reader.onload = function (e) {
    imgDataUrl = e.target.result;
    const img = document.createElement('img');
    img.src = imgDataUrl;
    img.style.maxWidth = "100%";
    img.style.maxHeight = "100%";
    img.onload = () => btn.disabled = false;
    previewArea.appendChild(img);
  };
  reader.readAsDataURL(file);
});

// Varsayılan PDF ismi (tarihli)
function defaultPdfName() {
  const now = new Date();
  return 'resim_' +
    now.getFullYear() +
    ('0'+(now.getMonth()+1)).slice(-2) +
    ('0'+now.getDate()).slice(-2) + '_' +
    ('0'+now.getHours()).slice(-2) +
    ('0'+now.getMinutes()).slice(-2) +
    ('0'+now.getSeconds()).slice(-2) + '.pdf';
}

// PDF'e dönüştürme işlemi:
btn.addEventListener('click', function () {
  if (!imgDataUrl) return;
  let filename = prompt("Oluşturulan PDF dosyasının adını giriniz:", "");
  if (!filename || !filename.trim()) filename = defaultPdfName();
  if (!filename.toLowerCase().endsWith('.pdf')) filename += ".pdf";

  const { jsPDF } = window.jspdf;
  const pdf = new jsPDF({ orientation: "portrait", unit: "pt", format: "a4" });
  const pageWidth = pdf.internal.pageSize.getWidth();
  const pageHeight = pdf.internal.pageSize.getHeight();
  const img = new window.Image();
  img.onload = function () {
    const imgWidth = img.width;
    const imgHeight = img.height;
    const scale = Math.min((pageWidth * 0.9) / imgWidth, (pageHeight * 0.9) / imgHeight, 1);
    const pdfWidth = imgWidth * scale;
    const pdfHeight = imgHeight * scale;
    const x = (pageWidth - pdfWidth) / 2;
    const y = (pageHeight - pdfHeight) / 2;
    pdf.addImage(imgDataUrl, 'JPEG', x, y, pdfWidth, pdfHeight);
    pdf.save(filename);
  };
  img.src = imgDataUrl;
});
    */
</script>
</body>
</html>
