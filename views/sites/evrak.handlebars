<!DOCTYPE html>  
<html lang="en">  
<head>  
    <meta charset="UTF-8">  
    <meta name="viewport" content="width=device-width, initial-scale=1.0">  
    <title>Bina Planı</title>  
    <link rel="icon" type="image/png" href="img/icon.png" sizes="32x32">
    <!-- Bootstrap CSS -->  
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="css/index.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>  

<style>  
    
body {
  min-height: 130vh;
  height: 110%;
  margin: 0;
  background: linear-gradient(to bottom, #fff, #dbeafe 75%);
}
.city-silhouette {
  position: fixed;   /* absolute değil, fixed! */
  left: 0; right: 0; bottom: 0;
  width: 100vw;
  height: 24vh;
  min-height: 100px;
  max-height: 220px;
  pointer-events: none;
  opacity: 0.5;
}
.main-content {
    position: relative;
}
.frost {
    backdrop-filter: blur(8px) brightness(0.96);
}

/* ---- Kısa Menü Barı ---- */
.custom-short-menu {
  display: flex;
  gap: 22px;
  justify-content: center;
  align-items: flex-start;
  width: 100%;
  margin: 18px 0 10px 0;
}
.menu-btn {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 70px;
  text-decoration: none;
  background: none;
  border: none;
  transition: color 0.18s, background 0.18s;
  cursor: pointer;
  outline: none;
}
.menu-btn img {
  width: 32px;
  height: 32px;
  margin-bottom: 4px;
}
.menu-btn span {
  font-size: 14px;
  color: #333;
}
.menu-btn:hover span, .menu-btn:focus span {
  color: #1d67c4;
  font-weight: 500;
}
#buttonHome { margin-right: 18px; }

/* ---- Navbar ve ProjectName (sol üst) ---- */
.container-fluid {
  display: flex;
  flex: 0 0 100%;
  flex-wrap: nowrap;
  align-items: center;
}
#projectName {
  flex: 0 0 90%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-family: Arial, sans-serif;
  font-size: 36px;
}
.img-fluid {
  flex: 0 0 auto;
  height: 30px;
  width: 30px;
  margin-right: 10px;
}

/* ---- Butonlar ---- */
.custom-btn {
  background-color: #847539;
  color: #fff;
  border: none;
  border-radius: 10px;
  padding: 10px 20px;
  font-family: "Varela Round";
  font-size: 16px;
  font-weight: bold;
  letter-spacing: 2px;
  cursor: pointer;
  transition: background-color 0.3s;
  margin-right: 40px;
}
.custom-btn:hover, .custom-btn:focus {
  background-color: #67552A;
}

/* ---- Süreç Başlığı ---- */
.surec-title {
  font-family: 'Oswald', sans-serif;
  font-size: 2.1rem;
  font-weight: bold;
  text-align: center;
  color: #67552A;
  margin: 32px 0 36px 0;
}

/* ---- Süreç Adımları (Yatay Tab Bar) ---- */
.flow-steps-container {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  gap: 0.5em;
  padding: 1.25em 0 2em 0;
}
.flow-step-btn {
  font-family: inherit;
  background: #fff;
  color: #333;
  border: 2px solid #e2e8f0;
  border-radius: 2.4em;
  font-weight: 500;
  font-size: 1.18em;
  padding: 0.88em 2.3em;
  display: flex;
  align-items: center;
  cursor: pointer;
  box-shadow: 0 2px 8px 0 #e5ecf7;
  transition: color 0.14s, background 0.16s, border-color 0.16s;
  outline: none;
  position: relative;
  min-width: 176px;
}
.flow-step-btn.active, .flow-step-btn:focus {
  background: linear-gradient(90deg, #2563eb 0%, #60a5fa 70%);
  color: #fff;
  border-color: #468ef9;
  box-shadow: 0 4px 16px 0 #cbd9fd;
  z-index: 1;
}
.flow-step-arrow {
  display: flex;
  align-items: center;
  height: 30px;
}
.flow-step-arrow svg {
  display: block;
  width: 28px;
  height: 30px;
  stroke: #d1d5db;
  stroke-width: 2.5;
  fill: none;
}

/* ---- Evrak İşleri (Accordion Kutuları) ---- */
.surec-section { display: none; }
.surec-section.active { display: block; animation: fadein 0.5s; }
@keyframes fadein {
  from { opacity: 0; transform: translateY(20px);}
  to { opacity: 1; transform: translateY(0);}
}
.bolum-baslik {
  font-family: 'Oswald', sans-serif;
  font-size: 1.26rem;
  color: #5b74e6;
  font-weight: 700;
  margin-bottom: 1.2rem;
  letter-spacing: 0.5px;
  text-align: center;
  margin-top: 4px;
}
.alt-kutu-icerik { 
  display: none; 
}
.alt-baslik-kutu[aria-expanded="true"] + .alt-kutu-icerik { 
  display: block; 
}
.er-kutular {
  width: 100%;
  max-width: 750px;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 1.1rem;
}
.alt-baslik-kutu {
  background: linear-gradient(90deg, #f7ecd2 0%, #e3e7fa 100%);
  border-radius: 1.4rem;
  box-shadow: 0 4px 14px 0 rgba(160,160,160,0.07);
  padding: 1.0rem 1.25rem 1.08rem 1.31rem;
  border: none;
  display: flex;
  width: 100%;
  cursor: pointer;
  position: relative;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 1.07rem;
  font-weight: 700;
  color: #2c2c21;
  transition: background .18s, box-shadow .18s, color .17s;
  text-align: left;
}
.alt-baslik-kutu:hover, .alt-baslik-kutu:focus {
  background: linear-gradient(90deg, #f2e5be 0%, #cbd8f3 100%);
  color: #2857ad;
  box-shadow: 0 8px 22px 0 rgba(120,140,190,0.12);
  outline: none;
}
.alt-kutu-arrow {
  position: absolute;
  right: 18px;
  top: 50%;
  transform: translateY(-50%) rotate(0deg);
  transition: transform .25s cubic-bezier(.43,1.16,.45,1.13);
  font-size: 1.08em;
  pointer-events: none;
  color: #caad2e;
}
.alt-baslik-kutu[aria-expanded="true"] .alt-kutu-arrow {
  transform: translateY(-50%) rotate(90deg);
  color: #4a75e0;
}
.alt-kutu-icerik {
  background: #f7ecd2;
  border-radius: 0 0 1rem 1rem;
  margin-top: -6px;
  box-shadow: 0 2px 8px 0 rgba(180,180,180,0.08);
  padding: 0.7rem 1.7rem 1.08rem 1.7rem;
  animation: fadein .4s;
  width: 100%;
}
.alt-kutu-icerik ul { margin-bottom: 0; }
.alt-kutu-icerik li {
  font-family: "Varela Round", Arial, sans-serif;
  font-size: 1rem;
  color: #312e21;
  margin-bottom: 0.43rem;
}

/* ---- Evrak Ekle Butonu ---- */
.evrak-ekle-btn {
  display: block;
  margin: 50px auto 0 auto;
  font-family: "Oswald", Arial, sans-serif;
  font-size: 1.15rem;
  background: linear-gradient(90deg, #e3e7fa 0%, #f7ecd2 100%);
  border-radius: 14px;
  border: none;
  color: #3560bd;
  padding: 0.8rem 1.7rem;
  font-weight: 700;
  box-shadow: 0 2px 10px 0 rgba(180,180,180,0.10);
  transition: background .2s, color .2s, box-shadow .14s;
  letter-spacing: 1px;
}
.evrak-ekle-btn:hover, .evrak-ekle-btn:focus {
  background: linear-gradient(90deg, #f7ecd2 0%, #e3e7fa 100%);
  color: #1d4188;
  box-shadow: 0 4px 17px 1px rgba(80,100,200,0.13);
  outline: none;
}

/* ---- Üretim Adımları Kutuları ---- */
.uretim-steps-row {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 8px;
  justify-content: center;
  margin: 20px 0 0 0;
}
.uretim-step-btn {
  background: linear-gradient(90deg, #f7ecd2 0%, #e3e7fa 100%);
  color: #2c2c21;
  border-radius: 16px;                           /* Daha yuvarlak */
  border: none;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 1.15rem;                            /* Font büyüdü */
  font-weight: 700;
  padding: 0.56rem 2rem;                         /* Üst-alt ve sağ-sol padding arttı */
  transition: background .14s, color .13s, box-shadow .14s;
  box-shadow: 0 4px 14px 0 rgba(120,140,190,0.12); /* Gölge biraz güçlendi */
  cursor: pointer;
  margin: 8px 0;                                /* Dikey aralık arttı */
  position: relative;
  white-space: nowrap;
}
.uretim-step-btn:hover, .uretim-step-btn:focus {
  background: linear-gradient(90deg, #f2e5be 0%, #cbd8f3 100%);
  color: #3560bd;
  box-shadow: 0 6px 18px 0 rgba(120,140,190,0.17);
  outline: none;
}
.uretim-step-ok {
  display: flex;
  align-items: center;
  margin: 0 3px;
  z-index: 1;
}
.uretim-step-ok svg {
  width: 34px;
  height: 14px;
  color: #d6b739;
  stroke-width: 5px;
  stroke: #d6b739;
  fill: none;
  vertical-align: middle;
}
#tab-uretim .bolum-baslik {
  font-family: 'Oswald',sans-serif;
  font-size:2.2rem;
  color: #3560bd;
  font-weight: 800;
  border-radius: 18px;
  padding: 1.2em 1.3em .9em 1.3em;
  margin-bottom:2.2rem;
  box-shadow:0 6px 36px 0 rgba(44, 83, 180, 0.10);
  text-align:center;
  text-shadow:0 2px 8px #e6eefd;
  letter-spacing:.03em;
}
.bolum-baslik {
  background: none;
  box-shadow: none;
}
/* Soft glassy tablar */
.uretim-tabs-row {
  display:flex; gap:15px; justify-content:center; margin-bottom:1.6rem;
  flex-wrap:wrap;
}
.uretim-tab-btn {
  position: relative;
  appearance: none;
  outline: none;
  border: none;
  font-family: 'Oswald', Arial, sans-serif;
  font-size: 0.97rem;                     /* Font daha küçük */
  font-weight: 700;
  padding: .62em 1.4em .62em 1.7em;       /* Üst-alt ve sağ-sol padding azaldı */
  border-radius: 14px;                    /* Köşe biraz küçüldü */
  background: linear-gradient(92deg, #f0f9ff 0%, #dbeafe 60%, #bae6fd 100%);
  color: #446398;
  box-shadow: 0 2px 8px 0 #bcdffd44;      /* Gölge daha yumuşak */
  backdrop-filter: blur(7px) saturate(130%);
  transition: all .18s cubic-bezier(.47,1.7,.39,.88);
  letter-spacing: .07em;
  border: 1.4px solid #dbeafe;           /* Kenarlık inceldi */
  margin-bottom: 0;
  cursor: pointer;
  min-width: 86px;                        /* Minimum genişlik daha az */
  display: flex;
  gap: .4em;
  align-items: center;
}

.uretim-tab-btn:hover,
.uretim-tab-btn:focus {
  color: #fff;
  background: linear-gradient(98deg, #60a5fa 0%, #38bdf8 94%);
  box-shadow: 0 8px 28px 0 #60a5fa33, 0 2px 8px #2563eb19;
  border-color: #38bdf8;
}

.uretim-tab-btn:focus,
.uretim-tab-btn:active,
.uretim-tab-btn:focus-visible {
  outline: none !important;
  box-shadow: none !important;
  color: #000000;
}
.uretim-tab-btn .uretim-ikon {
  font-size:1.27em; 
  opacity:.82;
  margin-right:.25em;
  margin-top:-2px;
  display:inline-block;
  filter:drop-shadow(0 1px 0 #eef6ff77);
}

/* ---- Modal ve File List ---- */
.modal-xl { --bs-modal-width:950px; }
#modalUretim .file-list { max-height:180px; overflow:auto; }

#geriRadyalBtn {
  float: none !important;     /* Bootstrap float'ı devreden çıkar */
  display: block;             /* Tam satır kaplasın */
  margin-left: 0;
  margin-bottom: 8px;
}
#modalContentGenel > .row {
  justify-content: center !important;
}


/* ---- Responsive Break Points ---- */
@media (max-width:820px){
  .uretim-steps-row { flex-wrap: wrap; }
  .uretim-step-btn { font-size:0.98rem; padding:.28rem 0.87rem;}
  .uretim-step-ok svg { width:22px; height:10px; }
}

/* -- <600px: Tüm süreç adımları ve menüler dikeyleşiyor, paddings/küçülüyor -- */
@media (max-width:600px){
  .city-silhouette {
    position: fixed;
    left: 0; right: 0; bottom: 0;
    width: 100vw;
    height: 14vh;
    min-height: 70px;
    max-height: 150px;
  }
  .container-navbar { flex-wrap: wrap; justify-content: flex-end; }
  #projectName {
    flex: 0 0 70%;
    font-size: 17px !important; max-width: 65%; min-width: 0; margin-right: 0;
    white-space: nowrap; overflow: hidden; text-overflow: ellipsis; text-align: left;
  }
  #buttonHome { flex: 0 0 30px; padding: 0; margin-left: 0; display: flex; align-items: center;}
  .img-fluid { height: 28px; width: 28px; margin-right: 0; margin-left: 0; }
  .custom-btn { font-size: 12px; padding: 5px 10px; border-radius: 6px; color: #fff; border: none; margin-right: 12px; font-weight: 500; }
  .navbar-toggler { background-color: #c2c5c9; flex: 0 0 auto; margin-left: auto; justify-content: flex-end;}
  .container-fluid { flex-wrap: wrap; }
  .custom-short-menu {
    gap: 12px; width: 90%!important; margin-top: 12px; margin-left:auto; margin-right:auto;
  }
  .menu-btn { flex: 1 1 0; min-width: 0; }
  .menu-btn img { width: 25px; height: 25px; margin-bottom: 4px;}
  .menu-btn span { font-size: 0.8rem; white-space: nowrap; text-align: center;}
  .flow-steps-container { flex-direction: column; gap: .1em; }
  .flow-step-arrow { transform: rotate(90deg); height: 24px; }
  .flow-step-arrow svg { width: 22px; height: 20px; }
  .flow-step-btn { 
    width: 60%; 
    justify-content: center;
    font-size: 1em;                 /* Metin biraz küçültüldü */
    padding: 0.57em 1.2em;          /* Yastıklar azaltıldı */
    border-radius: 1.4em;           /* Köşeler biraz daraldı */
    box-sizing: border-box;         /* Padding genişliğe dahil edilir */
    margin: 7px 0;
    }
  .surec-title { font-size: 1.5em; margin-bottom: 10px; }
  #tab-uretim .bolum-baslik { font-size:1.29rem; padding:.9em .33em .7em .33em; }
  .uretim-tabs-row{ gap:7px;}
  .uretim-tab-btn{ font-size:1.01rem; padding:.6em 1em .66em 1.4em; border-radius:13px; min-width:94px;}
  .uretim-tab-btn .uretim-ikon {font-size:1em;}
  .uretim-step-btn {
    font-size: 0.98rem;           /* Yazı bir miktar küçüldü */
    padding: 0.48rem 1.1rem;      /* Daha dar padding */
    border-radius: 13px;          /* Biraz daha az yuvarlaklık */
    box-shadow: 0 2px 8px 0 rgba(120,140,190,0.10);
    width: 60%;                  /* Tam satır genişliği (opsiyonel) */
    margin: 7px 0;                /* Dikey aralık korundu */
  }
  .evrak-ekle-btn { font-size: 0.9rem; padding: 0.6rem 1.4rem;}
  .alt-baslik-kutu{font-size:0.95rem; padding:.75rem 1.1rem;}

  #geriRadyalBtn {
    float: right !important;  /* Büyük ekranda sağa geçebilir */
    display: inline-block;
    margin-left: auto;
    margin-bottom: 10px !important;
  }
  #modalContentGenel > .row > .col-lg-7,
  #modalContentGenel > .row > .col-lg-5 {
    padding-left: 0 !important;
    padding-right: 0 !important;
    align-items: center;
  }
  #modalContentGenel .card {
    width: 90vw;
  }
}

/* --- Ekstra - Scrollbarlarını yumuşatmak isteyenler için (isteğe bağlı) --- */
.er-kutular, .file-list { scrollbar-width: thin; scrollbar-color: #bfcfe5 #fafafa;}
.er-kutular::-webkit-scrollbar, .file-list::-webkit-scrollbar { width:7px; background:#fafafa;}
.er-kutular::-webkit-scrollbar-thumb, .file-list::-webkit-scrollbar-thumb { background: #bfcfe5; border-radius: 6px;}
</style>
</head>  
<body class="relative min-h-screen w-full bg-gradient-to-b from-white to-blue-100 flex flex-col items-center justify-start">
  <!-- Alt Şehir Silüeti SVG -->
  <svg class="city-silhouette" viewBox="0 0 400 96" fill="none" preserveAspectRatio="none" width="100%" height="100%">
  <g>
    <!-- Sol bloklar -->
    <rect x="0" y="60" width="14" height="36" rx="2" fill="#6366f1" opacity="0.13"/>
    <rect x="16" y="40" width="22" height="56" rx="4" fill="#60a5fa" opacity="0.18"/>
    <!-- Çatılı bina -->
    <rect x="41" y="72" width="12" height="24" rx="2" fill="#818cf8" opacity="0.16"/>
    <polygon points="41,72 47,62 53,72" fill="#818cf8" opacity="0.28"/>
    <rect x="56" y="60" width="16" height="36" rx="3" fill="#38bdf8" opacity="0.14"/>
    <!-- Pencereli uzun blok -->
    <rect x="75" y="36" width="12" height="60" rx="2" fill="#60a5fa" opacity="0.15"/>
    <rect x="81" y="44" width="2" height="8" rx="1" fill="#fff" opacity="0.22"/>
    <rect x="81" y="60" width="2" height="8" rx="1" fill="#fff" opacity="0.15"/>
    <!-- Mini blok -->
    <rect x="90" y="80" width="7" height="16" rx="1.5" fill="#818cf8" opacity="0.19"/>
    
    <!-- Orta bloklar -->
    <rect x="100" y="66" width="18" height="30" rx="2" fill="#6366f1" opacity="0.09"/>
    <rect x="121" y="46" width="28" height="50" rx="3" fill="#818cf8" opacity="0.09"/>
    <rect x="152" y="78" width="12" height="18" rx="2" fill="#60a5fa" opacity="0.16"/>
    <!-- Yan yana iki blok farklı yükseklikte -->
    <rect x="170" y="69" width="16" height="27" rx="2" fill="#818cf8" opacity="0.12"/>
    <rect x="188" y="79" width="10" height="17" rx="2" fill="#6366f1" opacity="0.12"/>
    <!-- Asimetrik büyük blok -->
    <rect x="201" y="29" width="29" height="67" rx="4" fill="#60a5fa" opacity="0.14"/>
    <!-- Farklı ton kısa blok -->
    <rect x="233" y="74" width="12" height="22" rx="2" fill="#38bdf8" opacity="0.13"/>
    <!-- İnce yüksek blok -->
    <rect x="248" y="25" width="9" height="71" rx="2" fill="#818cf8" opacity="0.17"/>
    <!-- Diğer bloklar (düz, alçak/kalın) -->
    <rect x="260" y="79" width="23" height="17" rx="3" fill="#6366f1" opacity="0.1"/>
    <rect x="287" y="67" width="16" height="29" rx="2" fill="#60a5fa" opacity="0.11"/>
    <!-- Minik bloklar ve farklı renk -->
    <rect x="306" y="82" width="6" height="14" rx="1" fill="#818cf8" opacity="0.17"/>
    <rect x="316" y="68" width="10" height="28" rx="2" fill="#38bdf8" opacity="0.14"/>
    <!-- Geniş kısa bina -->
    <rect x="330" y="80" width="26" height="16" rx="2" fill="#6366f1" opacity="0.09"/>
    <!-- Sağda küçük çatılı blok -->
    <rect x="360" y="70" width="13" height="26" rx="2" fill="#60a5fa" opacity="0.12"/>
    <polygon points="360,70 366.5,61 373,70" fill="#60a5fa" opacity="0.22"/>
    <!-- Sağda yüksek son blok -->
    <rect x="378" y="24" width="18" height="72" rx="2.5" fill="#6366f1" opacity="0.11"/>
    <!-- En sağ mini pencere detayı -->
    <rect x="384" y="32" width="2.5" height="8" rx="1" fill="#fff" opacity="0.20"/>
  </g>
</svg>

    <!-- Responsive Header -->  
    <nav class="header d-flex justify-content-between align-items-center px-3">
        <span class="d-flex align-items-center gap-2">
            <img src="img/icon.png" alt="Logo" width="32" height="32">
            Yapıo
        </span>
        <button class="btn custom-btn" id="loginButton" style="display: none;">PROJELER</button>  
    </nav>

    <!-- Navbar -->  
    <nav class="navbar navbar-expand-lg navbar-light bg-light sticky-top shadow-sm mt-4 container-navbar">  
        <div class="container-fluid">  
            <!-- Proje Adı -->  
            <h4 class="navbar-brand" id="projectName">Proje Adı</h4>  
            <!-- Ana Sayfa Butonu -->  
            <button class="btn d-flex navbar-home-button" id="buttonHome">  
                <img src="img/home1_1.png" alt="Katlar Görseli" class="img-fluid rounded">  
            </button>
        </div>  
    </nav> 

    <div class="custom-short-menu" id="regulation-button-area">
        <a class="menu-btn" id="quatation-button" href="#">
            <img src="img/pay1_1.png" alt="">
            <span>Giderler</span>
        </a>
        <a class="menu-btn" id="graphs-button" href="#">
            <img src="img/growth_1.png" alt="">
            <span>Analizler</span>
        </a>
        <a class="menu-btn" id="sold-button" href="#">
            <img src="/img/property.png" alt="">
            <span>Satış</span>
        </a>
    </div>

    <div id="loader" style="display:none;">
        <div class="spinner"></div>
        <span>Yükleniyor...</span>
    </div>

    <div class="container pt-3 pb-4">  
      <div class="surec-title">Yapı Üretim Süreci</div>  
      <div class="flow-steps-container">
        <button class="flow-step-btn active mb-2" data-tab="evrak">
          Evrak İşleri
        </button>
        
        <button class="flow-step-btn mb-2" data-tab="ruhsat">
          Yapı Ruhsatı
        </button>
      
          <button class="flow-step-btn mb-2" data-tab="uretim">
            Üretim
          </button>
        </div>
      </div>

    <!-- Evrak İşleri Bölümü -->  
    <div class="surec-section mb-4 active" id="tab-evrak">  
    
  <div class="er-kutular">  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🏛️</span>  
      Belediye  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Belediye" data-detay="Aflikasyon">Aplikasyon</li>  
        <li data-kurum="Belediye" data-detay="İmar durumu">İmar durumu</li>  
        <li data-kurum="Belediye" data-detay="Kanal kotu">Kanal kotu</li>  
        <li data-kurum="Belediye" data-detay="Ruhsat harcı">Ruhsat harcı</li>  
        <li data-kurum="Belediye" data-detay="Zemin etüdü harcı">Zemin etüdü harcı</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🖋️</span>  
      Noter  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Noter" data-detay="Müteahhitlik sözleşmesi">Müteahhitlik sözleşmesi</li>  
        <li data-kurum="Noter" data-detay="Vekalet sözleşmesi">Vekalet sözleşmesi</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🏗️</span>  
      Yapı Denetim  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Yapı Denetim" data-detay="Yapı denetim harcı">Yapı denetim harcı</li>  
        <li data-kurum="Yapı Denetim" data-detay="Fenni Jüri">Fenni Jeoloji</li>  
        <li data-kurum="Yapı Denetim" data-detay="Fenni harita/g">Fenni haritacı</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">🌎</span>  
      Zemin Etüdü  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Zemin Etüdü" data-detay="Zemin etüdü raporu">Zemin etüdü raporu</li>  
        <li data-kurum="Zemin Etüdü" data-detay="Zemin iyileştirme">Zemin iyileştirme</li>  
      </ul>  
    </div>  
    <div class="alt-baslik-kutu" tabindex="0" aria-expanded="false">  
      <span class="alt-baslik-ikon">📁</span>  
      Projeler  
      <span class="alt-kutu-arrow">&#9654;</span>  
    </div>  
    <div class="alt-kutu-icerik">  
      <ul>  
        <li data-kurum="Projeler" data-detay="Mimari">Mimari</li>  
        <li data-kurum="Projeler" data-detay="Statik">Statik</li>  
        <li data-kurum="Projeler" data-detay="Elektrik">Elektrik</li>  
        <li data-kurum="Projeler" data-detay="Tesisat">Tesisat</li>  
        <li data-kurum="Projeler" data-detay="HES">HES</li>  
        <li data-kurum="Projeler" data-detay="Akustik">Akustik</li>  
        <li data-kurum="Projeler" data-detay="Asansör">Asansör</li>  
      </ul>  
    </div>  
  </div>  
</div>

    <!-- Yapı Ruhsatı Bölümü -->  
    <div class="surec-section" id="tab-ruhsat">  
       
      <button class="evrak-ekle-btn">Evrak Ekle</button>  
    </div>  

    <!-- Üretim Bölümü -->
    <div class="surec-section mb-4" id="tab-uretim">
      
      <div class="uretim-tabs-row">
        <button id="btnKaba" class="uretim-tab-btn active"><span class="uretim-ikon">🧱</span> Kaba Üretim</button>
        <button id="btnInce" class="uretim-tab-btn"><span class="uretim-ikon">🎨</span> İnce Üretim</button>
      </div>

      <!-- Kaba Üretim Adımları -->
    <div class="uretim-kategori" id="kabaUretim" style="display:block;">
      <div class="uretim-steps-row w-100 mx-auto" style="max-width:980px;"></div>
    </div>
    <!-- İnce Üretim Adımları (boş şablon) -->
    <div class="uretim-kategori" id="inceUretim" style="display:none;">
      <div class="uretim-steps-row w-100 mx-auto" style="max-width:980px;justify-content:center;">
          <span style="font-family:'Varela Round', Arial,sans-serif;color:#7b8399;font-size:1.13rem;opacity:0.8;">İnce üretim adımları burada listelenecek…</span>
      </div>
    </div>
  </div>


    <!-- Dinamik Modal -->
<div class="modal fade" id="modalUretim" tabindex="-1" aria-labelledby="modalUretimLabel" aria-hidden="true">  
  <div class="modal-dialog modal-xl modal-dialog-scrollable">  
    <div class="modal-content" style="border-radius:19px;">  
      <div class="modal-header bg-primary text-white">  
        <h5 class="modal-title" id="modalUretimLabel">  
          <span id="modalBaslikIkon"></span>  
          <span id="modalBaslikText"></span>  
        </h5>  
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>  
      </div>  
      <div class="modal-body pb-1">  
        <div id="modalContentGenel"></div>  
      </div>  
    </div>  
  </div>  
</div>

<div class="modal fade" id="evrakModal" tabindex="-1" aria-labelledby="evrakModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="evrakModalLabel">Evrak Görüntüle</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
      </div>
      <div class="modal-body" id="evrakModalBody" style="min-height:350px;">
        <!-- İçerik buraya yüklenecek -->
      </div>
    </div>
  </div>
</div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
  
  <script type="module">
    import { showWarningMessage } from '/js/showMessage.js';

    const projectNameString = document.getElementById("projectName");
    const quatationButton = document.getElementById("quatation-button"); 
    const graphsButton = document.getElementById("graphs-button");
    const soldButton = document.getElementById("sold-button");
    const buttonHome = document.getElementById("buttonHome");
    const loginButton = document.getElementById("loginButton");
    const imageInput = document.getElementById('modalImageInput');
    const previewArea = document.getElementById('modalPreviewArea');
    const btn = document.getElementById('modalToPdfBtn');
    let imgDataUrl = null;
    const btnKaba = document.getElementById('btnKaba');
    const btnInce = document.getElementById('btnInce');
    const kabaUretim = document.getElementById('kabaUretim');
    const inceUretim = document.getElementById('inceUretim');

    let userId = null;
    let projectName = null;
    let building = null;
    let floorsDataFromDb = null;
    

    // DOM yüklendiğinde işlem başlat  
    document.addEventListener("DOMContentLoaded", () => { 

        window.user = {{#if user}}
        { "email": "{{user.email}}", "role": "{{user.role}}", "userId": "{{user.id}}", "project": {{{json project}}} }
        {{else}}
            { "role": "{{role}}" }
        {{/if}};

        userId = window.user.userId;
        const projectNameDb = window.user.project.projectName;
        projectName = projectNameDb;
        if(projectName){
            const projectNameText = projectNameDb.toUpperCase();
            projectNameString.textContent = projectNameText;
        }
        if(userId){
            loginButton.style.display = "block";
        } else{
            loginButton.style.display = "none";
        }

        const urlParams = new URLSearchParams(window.location.search);  
        const cameFrom = urlParams.get('from');  
        if (cameFrom) {  
            fromControl = true;
            regulationButtonMobileArea.style.display = "none";
            regulationButtonArea.style.display = "none";
        }
 
        // İlk açılışta Kaba Üretim açık başlasın
        toggleTab(true);

        // Buton tıklama
        btnKaba.addEventListener('click', function() { toggleTab(true); });
        btnInce.addEventListener('click', function() { toggleTab(false); });
    });


    // Sekmeler arasında geçiş (Kaba & İnce Üretim)
    function toggleTab(showKaba) {
      if (showKaba) {
        kabaUretim.style.display = 'block';
        inceUretim.style.display = 'none';
        btnKaba.classList.add('active');
        btnInce.classList.remove('active');
      } else {
        kabaUretim.style.display = 'none';
        inceUretim.style.display = 'block';
        btnInce.classList.add('active');
        btnKaba.classList.remove('active');
      }
    }

    // (Eğer birden fazla flow sekmesi varsa kullan)
    // Flow tab switch
    document.querySelectorAll('.flow-step-btn').forEach(function(tab){
      tab.addEventListener('click', function(){
          document.querySelectorAll('.flow-step-btn').forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          const sectionId = 'tab-' + this.getAttribute('data-tab');
          document.querySelectorAll('.surec-section').forEach(sec => sec.classList.remove('active'));
          document.getElementById(sectionId).classList.add('active');
      });
    });

    // ============ Accordion ==================
document.querySelectorAll('.alt-baslik-kutu').forEach(function(header) {
  header.addEventListener('click', function(){
    // Kapatılacak içerik, başlığın hemen sonraki kardeşidir:
    const content = header.nextElementSibling;

    const isOpen = header.getAttribute('aria-expanded') === 'true';

    // Tüm başlık ve içerikleri kapat
    document.querySelectorAll('.alt-baslik-kutu').forEach(h => {
      h.setAttribute('aria-expanded', 'false');
      h.querySelector('.alt-kutu-arrow').innerHTML = "&#9654;"; // Sağ ok
    });
    document.querySelectorAll('.alt-kutu-icerik').forEach(c => c.style.display = 'none');

    // Eğer tıklanan zaten açıksa KAPALI bırak, değilse AÇ
    if(!isOpen){
      header.setAttribute('aria-expanded','true');
      content.style.display = 'block';
      header.querySelector('.alt-kutu-arrow').innerHTML = "&#9660;"; // Aşağı ok (isteğe bağlı)
    }
  });

  // Klavye ile de çalışsın:
  header.addEventListener('keydown', function(e){
    if(e.key === "Enter" || e.key === " ") { 
      e.preventDefault(); header.click();
    }
  });
});

// Sayfa ilk yüklendiğinde tüm içerikler kapalı olsun:
document.querySelectorAll('.alt-kutu-icerik').forEach(c => c.style.display = 'none');


let aktifEvrakKurum = null, aktifEvrakDetay = null, aktifEvrakKey = null;
// ============ Alt Liste <li> Click - Modal ==================
document.querySelectorAll('.alt-kutu-icerik li').forEach(function(item) {
  item.style.cursor = 'pointer';
  item.addEventListener('click', function() {
    aktifAdimId = null; // Kaba Üretimden ayırt!
    aktifAltKalem = null;
    aktifEvrakKurum = this.getAttribute('data-kurum') || '';
    aktifEvrakDetay = this.getAttribute('data-detay') || this.innerText.trim();
    aktifEvrakKey = `evrak:${aktifEvrakKurum}:${aktifEvrakDetay}`;

    document.getElementById('modalBaslikIkon').textContent = ikonBul(aktifEvrakKurum);
    document.getElementById('modalBaslikText').textContent = aktifEvrakKurum + ' - ' + aktifEvrakDetay;

    showOdemeEvrakForm(false, true); // (isRadyal=false, isEvrakIsleri=true)
    bootstrap.Modal.getOrCreateInstance(document.getElementById('modalUretim')).show();
  });
});
function ikonBul(kurum) {
  switch (kurum) {
    case 'Belediye': return '🏛️';
    case 'Noter': return '🖋️';
    case 'Yapı Denetim': return '🏗️';
    case 'Zemin Etüdü': return '🌎';
    case 'Projeler': return '📁';
    default: return '';
  }
}

    // Kaba Üretim Adımları - TAM LİSTE
const URETIM_ADIMLARI = [
  { id: 'santiyeKurma',  ad: "Şantiye kurma",                     icon: "fa-hard-hat"         },
  { id: 'temelKazma',    ad: "Temel kazma",                       icon: "fa-mountain-sun"     },
  { id: 'groBeton',      ad: "Gro beton",                         icon: "fa-bricks"           },
  { id: 'radyalTemel',   ad: "Radyal Temel",                      icon: "fa-cube"             },
  { id: 'perdeBetonu',   ad: "Perde betonu",                      icon: "fa-border-all"       },
  { id: 'temelIzolasyon',ad: "Temel izolasyonu",                  icon: "fa-shield-halved"    },
  { id: 'dolgu',         ad: "Dolgu",                             icon: "fa-road"             },
  { id: 'subasman',      ad: "Subasman",                          icon: "fa-square-poll-horizontal"},
  { id: 'zeminBetonu',   ad: "Zemin betonu",                      icon: "fa-th-large"         },
  { id: 'katBetonlari',  ad: "1-2-3-4. kat betonları",            icon: "fa-layer-group"      },
  { id: 'kapamaBetonu', ad: "Kapama betonu",                      icon: "fa-layer-minus"      },
  { id: 'catiUygulama',  ad: "Çatı uygulamaları",                 icon: "fa-house-chimney"    },
  { id: 'duvarOrme',     ad: "Duvar örme",                        icon: "fa-grip-lines-vertical"},
  { id: 'sap',            ad: "ŞAP",                              icon: "fa-fill"    }
];

const SANTIYE_KURMA = [
  { id:"citleme",         ad:"Çevre Çiti",                 icon:"fa-border-style",         birimler:["metre", "adet"] },
  { id:"nizamiye",        ad:"Güvenlik/Nizamiye",          icon:"fa-shield-alt",           birimler:["adet"] },
  { id:"konteyner_ofis",  ad:"Ofis Konteyneri",            icon:"fa-home",                 birimler:["adet", "m²"] },
  { id:"konteyner_yemek", ad:"Yemekhane Konteyneri",       icon:"fa-utensils",             birimler:["adet", "m²"] },
  { id:"konteyner_wc",    ad:"WC/Duş Konteyneri",          icon:"fa-restroom",             birimler:["adet"] },
  { id:"elektrik",        ad:"Elektrik Altyapısı",         icon:"fa-bolt",                 birimler:["metre", "adet"] },
  { id:"su",              ad:"Su Bağlantısı",              icon:"fa-tint",                 birimler:["metre", "adet"] },
  { id:"zemin_betonu",    ad:"Zemin Beton/Tabliye",        icon:"fa-th-large",             birimler:["m²", "m³"] },
  { id:"depo",            ad:"Malzeme Deposu",             icon:"fa-box",                  birimler:["adet", "m²"] },
  { id:"jenerator",       ad:"Jeneratör",                  icon:"fa-charging-station",     birimler:["adet"] },
  { id:"su_deposu",       ad:"Su Deposu",                  icon:"fa-water",                birimler:["adet", "litre", "m³"] },
  { id:"aydinlatma",      ad:"Şantiye Aydınlatması",       icon:"fa-lightbulb",            birimler:["adet"] },
  { id:"levhalar",        ad:"Tabelalar / Levhalar",       icon:"fa-exclamation-triangle", birimler:["adet"] },
  { id:"camasirhane",     ad:"Çamaşırhane",                icon:"fa-tshirt",               birimler:["adet"] },
  { id:"guvenlik_kamera", ad:"Güvenlik Kamerası",          icon:"fa-video",                birimler:["adet", "set"] },
  { id:"yangin",          ad:"Yangın Ekipmanı",            icon:"fa-fire-extinguisher",    birimler:["adet"] },
  { id:"ilk_yardim",      ad:"İlk Yardım Ünitesi",         icon:"fa-briefcase-medical",    birimler:["adet"] },
  { id:"tasinim",         ad:"Personel Servisi/Taşıma",    icon:"fa-bus",                  birimler:["adet", "gün"] },
  { id:"iskele",          ad:"Geçici İskele",              icon:"fa-ladder-water",         birimler:["metre", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const TEMEL_KAZMA = [
  { id: "kazi_yapimi", ad: "Kazı Yapılması", icon: "fa-mountain", birimler: ["m³", "m²", "adet"] },
  { id: "makine_kiralama", ad: "Kazı Makinesi Çalıştırılması", icon: "fa-tractor", birimler: ["saat", "gün", "m³"] },
  { id: "yukleme", ad: "Malzeme Yüklenmesi", icon: "fa-dumpster", birimler: ["m³", "saat"] },
  { id: "tasima", ad: "Malzeme Nakliyesi", icon: "fa-truck", birimler: ["m³", "km", "ton"] },
  { id: "tesviye", ad: "Tesviye/Düzeltme", icon: "fa-ruler-horizontal", birimler: ["m²", "m³"] },
  { id: "iksa", ad: "İksa/Destekleme", icon: "fa-border-style", birimler: ["m", "m²", "adet"] },
  { id: "drenaj", ad: "Drenaj ve Su Tahliyesi", icon: "fa-water", birimler: ["metre", "adet"] },
  { id: "su_indirimi", ad: "Taban Suyu İndirimi", icon: "fa-tint", birimler: ["saat", "gün"] },
  { id: "hafriyat_depolama", ad: "Hafriyat Depolama/Uzaklaştırma", icon: "fa-dumpster-fire", birimler: ["m³", "kamyon"] },
  { id: "elle_kazi", ad: "Elle Kazı", icon: "fa-person-digging", birimler: ["m³", "saat"] },
  { id: "kaba_kazi", ad: "Kaba Kazı", icon: "fa-mound", birimler: ["m³"] },
  { id: "ince_kazi", ad: "İnce Kazı/Şev Düzeltmesi", icon: "fa-sliders-h", birimler: ["m³"] },
  { id: "patlatma", ad: "Patlatmalı Kazı", icon: "fa-bomb", birimler: ["m³", "adet"] },
  { id: "kontrolluk", ad: "Kazı Kontrollüğü ve Ölçüm", icon: "fa-tape", birimler: ["gün", "adet"] },
  { id: "zemin_test", ad: "Zemin Testleri", icon: "fa-vial", birimler: ["adet"] },
  { id: "gecici_yol", ad: "Geçici Yol Açılması", icon: "fa-road", birimler: ["metre"] },
  { id: "guvenlik", ad: "Kazı Güvenlik Tedbirleri", icon: "fa-exclamation-triangle", birimler: ["adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const GRO_BETON = [
  { id: "alan_hazirligi", ad: "Alan Hazırlığı", icon: "fa-ruler-horizontal", birimler: ["m²", "adet"] },
  { id: "kalip", ad: "Kalıp Hazırlığı", icon: "fa-border-style", birimler: ["metre", "adet"] },
  { id: "beton_temini", ad: "Beton Temini ve Nakliyesi", icon: "fa-truck", birimler: ["m³", "adet"] },
  { id: "gro_beton_serme", ad: "Beton Serme ve Yayma", icon: "fa-mountain", birimler: ["m³"] },
  { id: "tesviye", ad: "Tesviye / Şap Çekme", icon: "fa-ruler-horizontal", birimler: ["m²"] },
  { id: "sikistirma", ad: "Sıkıştırma / Vibrasyon", icon: "fa-vibrate", birimler: ["m³", "adet"] },
  { id: "bakim", ad: "Sulama ve Bakım", icon: "fa-tint", birimler: ["m³", "gün"] },
  { id: "numune", ad: "Numune Alımı ve Test", icon: "fa-vials", birimler: ["adet"] },
  { id: "temizlik", ad: "Atık Temizliği", icon: "fa-broom", birimler: ["m²", "gün"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const DOLGU = [
  { id: "malzeme_temini", ad: "Dolgu Malzemesi Temini ve Nakliyesi", icon: "fa-truck", birimler: ["m³", "ton"] },
  { id: "alan_hazirligi", ad: "Dolgu Alanı Hazırlığı", icon: "fa-ruler-combined", birimler: ["m²", "m³"] },
  { id: "serme", ad: "Malzeme Serilmesi", icon: "fa-layer-group", birimler: ["m³"] },
  { id: "sikistirma", ad: "Sıkıştırma", icon: "fa-vibrate", birimler: ["m³"] },
  { id: "nemlendirme", ad: "Nemlendirme", icon: "fa-tint", birimler: ["m³", "gün"] },
  { id: "seviye_kontrol", ad: "Seviye ve Kot Kontrolü", icon: "fa-tape", birimler: ["m²", "gün"] },
  { id: "numune", ad: "Numune Alımı ve Laboratuvar Deneyleri", icon: "fa-vials", birimler: ["adet"] },
  { id: "gecici_yol", ad: "Geçici Yol/Platform", icon: "fa-road", birimler: ["m", "m²"] },
  { id: "atik_tasima", ad: "Atık/Fazla Malzeme Uzaklaştırma", icon: "fa-dumpster", birimler: ["m³", "ton"] },
  { id: "drenaj", ad: "Drenaj Boşlukları", icon: "fa-water", birimler: ["metre", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet"] }
];

const RADYAL_ALTKALEM = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna",           birimler:["kg", "ton", "adet"] },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain",      birimler:["m³"] },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square",   birimler:["kg", "m", "rulo"] },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack",     birimler:["kg", "kutu", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const TEMEL_IZALASYONU = [
  { id:"su_tutucu_bant", ad:"Su Tutucu Bant",    icon:"fa-tape",           birimler:["metre", "rulo", "adet"] },
  { id:"mebran",         ad:"Mebran",            icon:"fa-layer-group",    birimler:["m²", "rulo", "adet"] },
  { id:"likit_mebran",   ad:"Likit Mebran",      icon:"fa-tint",           birimler:["kg", "kova", "litre"] },
  { id:"drenaj_levhasi", ad:"Drenaj Levhası",    icon:"fa-water",          birimler:["m²", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const SU_BASMAN = [
  { id:"celik_hasir",    ad:"Çelik Hasır",       icon:"fa-border-all",     birimler:["m²", "adet", "rulo"] },            
  { id:"beton",          ad:"Beton",             icon:"fa-mountain",       birimler:["m³"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const ZEMIN_BETONU = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna",           birimler:["kg", "ton", "adet"] },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain",      birimler:["m³"] },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square",   birimler:["kg", "m", "rulo"] },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack",     birimler:["kg", "kutu", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const KAT_BETONLARI = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna",           birimler:["kg", "ton", "adet"] },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain",      birimler:["m³"] },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square",   birimler:["kg", "m", "rulo"] },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack",     birimler:["kg", "kutu", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const CATI = [
  { id:"kereste",             ad:"Kereste",             icon:"fa-tree",                birimler:["m³", "adet", "metre"] },
  { id:"osb",                 ad:"OSB",                 icon:"fa-layer-group",         birimler:["adet", "plaka", "m²"] },
  { id:"cati_izalasyonu",     ad:"Çatı İzalasyonu",     icon:"fa-fill-drip",           birimler:["m²", "rulo", "paket"] },
  { id:"kiremit",             ad:"Kiremit",             icon:"fa-th",                  birimler:["adet", "paket", "m²"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const KAPAMA_BETONU = [
  { id:"demir",   ad:"Demir",   icon:"fa-dna",           birimler:["kg", "ton", "adet"] },
  { id:"beton",   ad:"Beton",   icon:"fa-mountain",      birimler:["m³"] },
  { id:"tel",     ad:"Tel",     icon:"fa-wave-square",   birimler:["kg", "m", "rulo"] },
  { id:"civi",    ad:"Çivi",    icon:"fa-thumbtack",     birimler:["kg", "kutu", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const SAP = [
  { id:"kum",       ad:"Kum",     icon:"fa-mound",       birimler:["ton", "kg", "m³"] },
  { id:"cimento",   ad:"Çimento", icon:"fa-cube",        birimler:["kg", "ton", "torba"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const DUVAR_ORME = [
  { id:"cimento",     ad:"Çimento",         icon:"fa-cube",         birimler:["kg", "ton", "torba"] },
  { id:"duvar_blogu", ad:"Duvar Bloğu",    icon:"fa-th-large",     birimler:["adet", "palet", "m²"] },
  { id:"kirec",       ad:"Kireç",          icon:"fa-flask",        birimler:["kg", "ton", "torba"] },
  { id:"kum_cakil",   ad:"Kum-Çakıl",      icon:"fa-mound",        birimler:["ton", "kg", "m³"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

// Her kombinasyonda ayrı veri
const odemeData = {};
const evrakData = {};

let aktifAdimId = null, aktifAltKalem = null;

// Adım butonlarını oluştur
const stepsRowEl = document.querySelector('.uretim-steps-row');
stepsRowEl.innerHTML = '';
URETIM_ADIMLARI.forEach((adim, idx) => {
  const btn = document.createElement('button');
  btn.type = "button";
  btn.className = "uretim-step-btn btn btn-outline-primary";
  btn.setAttribute('data-adimid', adim.id);
  btn.innerHTML = `<i class="fa-solid ${adim.icon} me-1"></i>${adim.ad}`;
  stepsRowEl.appendChild(btn);

});

// --- Modal: Adıma tıklayınca açılır ---
document.querySelectorAll('.uretim-step-btn').forEach(btn => {  
  btn.addEventListener('click', function(){  
    aktifAdimId = btn.getAttribute('data-adimid');  
    aktifAltKalem = null;  
    const adim = URETIM_ADIMLARI.find(a=>a.id===aktifAdimId);  
    document.getElementById('modalBaslikIkon').innerHTML = `<i class="fa-solid ${adim.icon} me-1"></i>`;  
    document.getElementById('modalBaslikText').textContent = adim.ad;  
    if(aktifAdimId==='radyalTemel'){  
      showRadyalKalemler();  
    } else if(aktifAdimId==='perdeBetonu'){
      showPerdeKalemler();
    } else if(aktifAdimId==='temelIzolasyon'){
      showTemelIzalasyonuKalemler();
    } else if(aktifAdimId==='subasman'){
      showSuBasmanKalemler();
    } else if(aktifAdimId==='zeminBetonu'){
      showZeminBetonuKalemler();
    } else if(aktifAdimId==='katBetonlari'){
      showKatBetonlariKalemler();
    } else if(aktifAdimId==='catiUygulama'){
      showCatiKalemler();
    } else if(aktifAdimId==='kapamaBetonu'){
      showKapamaBetonuKalemler();
    } else if(aktifAdimId==='sap'){
      showSapKalemler();
    } else if(aktifAdimId==='duvarOrme'){
      showDuvarOrmeKalemler();
    } else if(aktifAdimId==='santiyeKurma'){
      showSantiyeKurma();
    } else if(aktifAdimId==='temelKazma'){
      showTemelKazma();
    } else if(aktifAdimId==='groBeton'){
      showGroBeton();
    } else if(aktifAdimId==='dolgu'){
      showDolgu();
    }
    else {  
      showOdemeEvrakForm();  
    }  
    bootstrap.Modal.getOrCreateInstance(document.getElementById('modalUretim')).show();  
  });  
});  

// 1. Radyal Temel alt kalemlerini butonla göster:
function showSantiyeKurma(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Şantiye Kurma - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="santiyeKurmaBtnGrup">${  
        SANTIYE_KURMA.map(kal =>  
          `<button type="button" class="btn btn-outline-primary santiye-kurma-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="santiyeKurmaForm"></div>`;  

  document.querySelectorAll('.santiye-kurma-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Şantiye Kurma - "+ SANTIYE_KURMA.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showSantiyeKurma, aktifAltKalem, SANTIYE_KURMA);
    }  
  });  
}
function showTemelKazma(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Temel Kazma - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="temelKazmaBtnGrup">${  
        TEMEL_KAZMA.map(kal =>  
          `<button type="button" class="btn btn-outline-primary temel-kazma-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="temelKazmaForm"></div>`;  

  document.querySelectorAll('.temel-kazma-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Temel Kazma - "+ TEMEL_KAZMA.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showTemelKazma, aktifAltKalem, TEMEL_KAZMA);
    }  
  });  
}
function showGroBeton(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Gro Beton - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="groBetonBtnGrup">${  
        GRO_BETON.map(kal =>  
          `<button type="button" class="btn btn-outline-primary gro-beton-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="groBetonForm"></div>`;  

  document.querySelectorAll('.gro-beton-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Gro Beton - "+ GRO_BETON.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showGroBeton, aktifAltKalem, GRO_BETON);
    }  
  });  
}
function showDolgu(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Dolgu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="dolguBtnGrup">${  
        DOLGU.map(kal =>  
          `<button type="button" class="btn btn-outline-primary dolgu-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="dolguForm"></div>`;  

  document.querySelectorAll('.dolgu-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Dolgu - "+ DOLGU.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showDolgu, aktifAltKalem, DOLGU);
    }  
  });  
}
function showRadyalKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Radyal Temel - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="radyalKalemBtnGrup">${  
        RADYAL_ALTKALEM.map(kal =>  
          `<button type="button" class="btn btn-outline-primary radyal-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="radyalAltKalemForm"></div>`;  

  document.querySelectorAll('.radyal-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Radyal Temel - "+ RADYAL_ALTKALEM.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showRadyalKalemler, aktifAltKalem, RADYAL_ALTKALEM);
    }  
  });  
}
function showPerdeKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Perde Beton - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="perdeKalemBtnGrup">${  
        RADYAL_ALTKALEM.map(kal =>  
          `<button type="button" class="btn btn-outline-primary perde-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="perdeAltKalemForm"></div>`;  

  document.querySelectorAll('.perde-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Perde Beton - "+ RADYAL_ALTKALEM.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showPerdeKalemler, aktifAltKalem, RADYAL_ALTKALEM);
    }  
  });  
}
function showTemelIzalasyonuKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Temel İzalasyonu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="temelIzalasyonKalemBtnGrup">${  
        TEMEL_IZALASYONU.map(kal =>  
          `<button type="button" class="btn btn-outline-primary temel_izalasyon-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="temelIzalasyonAltKalemForm"></div>`;  

  document.querySelectorAll('.temel_izalasyon-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Temel İzalasyonu - "+ TEMEL_IZALASYONU.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showTemelIzalasyonuKalemler, aktifAltKalem, TEMEL_IZALASYONU);
    }  
  });  
}
function showSuBasmanKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Subasman - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="subasmanKalemBtnGrup">${  
        SU_BASMAN.map(kal =>  
          `<button type="button" class="btn btn-outline-primary subasman-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="subasmanAltKalemForm"></div>`;  

  document.querySelectorAll('.subasman-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Subasman - "+ SU_BASMAN.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showSuBasmanKalemler, aktifAltKalem, SU_BASMAN);
    }  
  });  
}
function showZeminBetonuKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Zemin Betonu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="zeminBetonuKalemBtnGrup">${  
        ZEMIN_BETONU.map(kal =>  
          `<button type="button" class="btn btn-outline-primary zemin-betonu-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="zeminBetonuAltKalemForm"></div>`;  

  document.querySelectorAll('.zemin-betonu-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Zemin Betonu - "+ ZEMIN_BETONU.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showZeminBetonuKalemler, aktifAltKalem, ZEMIN_BETONU);
    }  
  });  
}
function showKatBetonlariKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Kat Betonları - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="katBetonlariKalemBtnGrup">${  
        KAT_BETONLARI.map(kal =>  
          `<button type="button" class="btn btn-outline-primary kat-betonlari-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="katBetonlariAltKalemForm"></div>`;  

  document.querySelectorAll('.kat-betonlari-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Kat Betonları - "+ KAT_BETONLARI.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showKatBetonlariKalemler, aktifAltKalem, KAT_BETONLARI);
    }  
  });  
}
function showCatiKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Çatı - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="catiKalemBtnGrup">${  
        CATI.map(kal =>  
          `<button type="button" class="btn btn-outline-primary cati-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="catiAltKalemForm"></div>`;  

  document.querySelectorAll('.cati-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Çatı - "+ CATI.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showCatiKalemler, aktifAltKalem, CATI);
    }  
  });  
}
function showKapamaBetonuKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Kapama Betonu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="kapamaBetonuKalemBtnGrup">${  
        KAPAMA_BETONU.map(kal =>  
          `<button type="button" class="btn btn-outline-primary kapama-betonu-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="kapamaBetonuAltKalemForm"></div>`;  

  document.querySelectorAll('.kapama-betonu-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Kapama Betonu - "+ KAPAMA_BETONU.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showKapamaBetonuKalemler, aktifAltKalem, KAPAMA_BETONU);
    }  
  });  
}
function showSapKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">ŞAP - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="sapKalemBtnGrup">${  
        SAP.map(kal =>  
          `<button type="button" class="btn btn-outline-primary sap-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="sapAltKalemForm"></div>`;  

  document.querySelectorAll('.sap-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "ŞAP - "+ SAP.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showSapKalemler, aktifAltKalem, SAP);
    }  
  });  
}
function showDuvarOrmeKalemler(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Duvar Örme - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="duvarOrmeKalemBtnGrup">${  
        DUVAR_ORME.map(kal =>  
          `<button type="button" class="btn btn-outline-primary duvar-orme-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="duvarOrmeAltKalemForm"></div>`;  

  document.querySelectorAll('.duvar-orme-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Duvar Örme - "+ DUVAR_ORME.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showDuvarOrmeKalemler, aktifAltKalem, DUVAR_ORME);
    }  
  });  
}


const INCE_URETIM_ADIMLARI = [
  { id: 'zeminUygulamalari',  ad: "Zemin Uygulamaları",  icon: "fa-grip-lines" }, // veya "fa-border-none", "fa-th-large"
  { id: 'icCephe',            ad: "İç Cephe",            icon: "fa-home" }, // "fa-paint-roller" da olabilir
  { id: 'islakMekanlar',      ad: "Islak Mekanlar",      icon: "fa-shower" },
  { id: 'mutfak',             ad: "Mutfak",              icon: "fa-utensils" }, // veya "fa-kitchen-set" FA6+
  { id: 'pimapen',            ad: "Pimapen",             icon: "fa-window-maximize" }, // pencere için
  { id: 'kapilar',            ad: "Kapılar",             icon: "fa-door-open" },
  { id: 'korkuluklar',        ad: "Korkuluklar",         icon: "fa-grip-vertical" }, // veya "fa-archway" veya "fa-bars"
  { id: 'disCephe',           ad: "Dış Cephe",           icon: "fa-city" }, // veya "fa-building", "fa-warehouse"
  { id: 'mantolama',          ad: "Mantolama",           icon: "fa-th-large" },//fa-layer-group, fa-fill-drip
  { id: 'tavan',              ad: "Tavan",               icon: "fa-border-top-left" }, // En uygun FA6+, FA5 yoksa "fa-grip-lines"
  { id: 'elektrikTesisat',    ad: "Elektrik Tesisat",    icon: "fa-bolt" }, // yıldırım
  { id: 'sihhiTesisat',       ad: "Sıhhi Tesisat",       icon: "fa-faucet" }, // musluk (FA6+), FA5'te "fa-tint"
  { id: 'dogalgaz',           ad: "Doğalgaz",            icon: "fa-fire-flame-simple" }, // alev FA6+, FA5 "fa-fire"
  { id: 'asansorKurulumu',    ad: "Asansör Kurulumu",    icon: "fa-elevator" }, // FA6+; FA5'te "fa-arrow-up", "fa-arrow-down"
  { id: 'iklimlendirme',      ad: "İklimlendirme",       icon: "fa-fan" }, // veya "fa-wind", "fa-snowflake" (klima/ısıtma)
  { id: 'peyzaj',             ad: "Peyzaj",              icon: "fa-seedling" } // bitki, çim
];

const ZEMIN_UYGULAMALARI = [
  { id:"seramik",     ad:"Seramik",        icon:"fa-border-none",      birimler:["m²", "kutu", "adet"] },
  { id:"parke",       ad:"Parke",          icon:"fa-grip-lines",       birimler:["m²", "paket", "adet"] },
  { id:"mermer",      ad:"Mermer",         icon:"fa-gem",              birimler:["m²", "adet", "plaka"] },
  { id:"zeminBoyasi", ad:"Zemin Boyası",   icon:"fa-paint-roller",     birimler:["kg", "litre", "kova"] },
  { id:"epoksi",      ad:"Epoksi",         icon:"fa-flask",            birimler:["kg", "litre", "set"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const ELEKTRIK_TESISAT = [
  {id: "elektrikIsciligi", ad: "Elektrik İşçiliği", icon: "fa-bolt", birimler: ["metre", "adet", "nokta", "pano", "saat", "gün"]},
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const SIHHI_TESISAT = [
  { id:"pisSu",     ad:"Pis Su",      icon:"fa-toilet",              birimler:["m", "boru", "adet"] },
  { id:"temizSu",   ad:"Temiz Su",    icon:"fa-faucet",              birimler:["m", "boru", "adet"] },
  { id:"isitma",    ad:"Isıtma",      icon:"fa-temperature-high",    birimler:["m", "boru", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const IC_CEPHE = [
  { id:"korKasa",       ad:"Kör Kasa",         icon:"fa-door-closed",      birimler:["metre", "adet"] },
  { id:"kosebent",      ad:"Köşebent",         icon:"fa-ruler-combined",   birimler:["metre", "adet"] },
  { id:"betonAstari",   ad:"Beton Astarı",     icon:"fa-fill-drip",        birimler:["kg", "litre"] },
  { id:"alci",          ad:"Alçı",             icon:"fa-snowflake",        birimler:["kg", "torba"] },
  { id:"cimento",       ad:"Çimento",          icon:"fa-cube",             birimler:["kg", "torba"] },
  { id:"kum",           ad:"Kum",              icon:"fa-mound",            birimler:["ton", "kg", "m³"] },
  { id:"hazirSivaIc",   ad:"Hazır Sıva İç",    icon:"fa-trowel",           birimler:["kg", "torba", "adet"] },
  { id:"icCepheBoyasi", ad:"İç Cephe Boyası",  icon:"fa-paint-roller",     birimler:["kg", "litre", "kova"] },
  { id:"boyaAstari",    ad:"Boya Astarı",      icon:"fa-brush",            birimler:["kg", "litre"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const TAVAN = [
  { id:"stropiyer", ad:"Stropiyer", icon:"fa-wave-square",        birimler:["metre", "adet", "paket"] },
  { id:"alcipan",   ad:"Alçıpan",   icon:"fa-layer-group",        birimler:["m²", "levha", "adet"] },
  { id:"karolem",   ad:"Karolem",   icon:"fa-th-large",           birimler:["adet", "kutu"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const PIMAPEN = [
  { id:"pencereler",    ad:"Pencereler",      icon:"fa-window-maximize",   birimler:["adet", "m²"] },
  { id:"zeminDograma",  ad:"Zemin Doğrama",   icon:"fa-vector-square",     birimler:["metre", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const KAPILAR = [
  { id:"odaKapilari",   ad:"Oda Kapıları",     icon:"fa-door-open",      birimler:["adet"] },
  { id:"celikKapilar",  ad:"Çelik Kapılar",    icon:"fa-shield-alt",     birimler:["adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];

const PEYZAJ = [
  { id:"bahceDuvari",   ad:"Bahçe Duvarı",     icon:"fa-border-style",          birimler:["metre", "adet", "m²"] },
  { id:"bitkilendirme", ad:"Bitkilendirme",    icon:"fa-seedling",              birimler:["adet", "m²"] },
  { id:"perforje",      ad:"Perforje",         icon:"fa-grip-lines-vertical",   birimler:["metre", "adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const MUTFAK = [
  { id: "tezgah",           ad: "Tezgah",           icon: "fa-grip-horizontal", birimler: ["m", "m²"] },
  { id: "mutfakEvye",       ad: "Mutfak Evye",      icon: "fa-sink",           birimler: ["adet", "takım"] },
  { id: "mutfakDolabi",     ad: "Mutfak Dolabı",    icon: "fa-box-archive",    birimler: ["m", "m²", "adet", "takım"] },
  { id: "mutfakBataryasi",  ad: "Mutfak Bataryası", icon: "fa-faucet",         birimler: ["adet", "takım"] },
  { id: "ankastre",         ad: "Ankastre",         icon: "fa-rectangle-list", birimler: ["adet", "set"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const ISLAK_MEKANLAR = [
  { id:"zeminYalitimi",   ad:"Zemin Yalıtımı",    icon:"fa-water",        birimler:["m²"] },
  { id:"seramikFayans",   ad:"Seramik Fayans",    icon:"fa-th",           birimler:["m²", "kutu", "adet"] },
  { id:"klozetler",       ad:"Klozetler",         icon:"fa-toilet",       birimler:["adet", "takım"] },
  { id:"lavabolar",       ad:"Lavabolar",         icon:"fa-sink",         birimler:["adet", "takım"] },
  { id:"banyoDolabi",     ad:"Banyo Dolabı",      icon:"fa-box-archive",  birimler:["adet", "takım"] },
  { id:"dusTeknesi",      ad:"Duş Teknesi",       icon:"fa-shower",       birimler:["adet", "takım"] },
  { id:"banyoBataryasi",  ad:"Banyo Bataryası",   icon:"fa-faucet",       birimler:["adet", "takım"] },
  { id:"lavaboBataryasi", ad:"Lavabo Bataryası",  icon:"fa-faucet-drip",  birimler:["adet", "takım"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const IKLIMLENDIRME = [
  { id: "kombi", ad: "Kombi", icon: "fa-fire", birimler: ["adet", "set"] },
  { id: "kombiDolabi", ad: "Kombi Dolabı", icon: "fa-box-archive", birimler: ["adet"] },
  { id: "klima", ad: "Klima", icon: "fa-wind", birimler: ["adet", "set"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const DIS_CEPHE = [
  { id: "hazirSivaDis", ad: "Hazır Sıva Dış", icon: "fa-fill-drip", birimler: ["kg", "torba", "adet"] },
  { id: "cimento", ad: "Çimento", icon: "fa-cube", birimler: ["kg", "torba"] },
  { id: "kum", ad: "Kum", icon: "fa-mountain", birimler: ["ton", "kg", "m³"] },
  { id: "disCepheBoyasi", ad: "Dış cephe Boyası", icon: "fa-paint-roller", birimler: ["kg", "litre", "kova"] },
  { id: "sove", ad: "Söve", icon: "fa-border-none", birimler: ["metre", "adet", "m²"] },
  { id: "boyaAstari", ad: "Boya Astarı", icon: "fa-brush", birimler: ["kg", "litre"] },
  { id: "alci", ad: "Alçı", icon: "fa-snowflake", birimler: ["kg", "torba"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const MANTOLAMA = [
  { id: "yuzey_hazirlik",   ad: "Yüzey Hazırlığı ve Temizlik", icon: "fa-broom",         birimler: ["m²", "adet"] },
  { id: "duvel_montaj",     ad: "Dübel ve Aksesuar Montajı",   icon: "fa-screwdriver",   birimler: ["adet", "m"] },
  { id: "yalitim_levha",    ad: "Yalıtım Levhası Montajı",     icon: "fa-layer-group",   birimler: ["m²", "adet"] },
  { id: "karbonluEps",      ad: "Karbonlu EPS",                icon: "fa-dice-d6",       birimler: ["m²", "m³", "adet"] },
  { id: "xps",              ad: "XPS",                         icon: "fa-layer-group",   birimler: ["m²", "m³", "adet"] },
  { id: "tasYunu",          ad: "Taş Yünü",                    icon: "fa-feather-alt",   birimler: ["m²", "m³", "adet"] },
  { id: "file_siva",        ad: "Donatı File ve Sıva",         icon: "fa-grip-lines",    birimler: ["m²"] },
  { id: "kaplama_siva",     ad: "İkinci Kat Sıva",             icon: "fa-fill-drip",     birimler: ["m²"] },
  { id: "dekoratif_kaplama",ad: "Dekoratif/Son Kat Kaplama",   icon: "fa-border-none",   birimler: ["m²"] },
  { id: "profil_kose",      ad: "Profil ve Köşe Detayı",       icon: "fa-vector-square", birimler: ["metre", "adet"] },
  { id: "derz_mastik",      ad: "Derz/Sızdırmazlık Mastik",    icon: "fa-pen-fancy",     birimler: ["metre", "adet"] },
  { id: "temizlik",         ad: "Temizlik ve Atık Uzaklaştırma",icon:"fa-trash-alt",     birimler: ["gün", "adet"] },
  { id: "numune_test",      ad: "Numune ve Kalite Testleri",   icon: "fa-vials",         birimler: ["adet"] },
  { id: "iskele",           ad: "İskele Kurulumu/Sökümü",      icon: "fa-ladder-water",  birimler: ["m²", "gün"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const KORKULUKLAR = [
  { id: "balkon", ad: "Balkon",icon: "fa-grip-lines-vertical", birimler: ["metre", "adet", "kg", "m²"]},
  { id: "merdiven", ad: "Merdiven", icon: "fa-stairs", birimler: ["metre", "adet", "kg", "m²"]},
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const DOGALGAZ = [
  { id: "proje_onay", ad: "Proje ve Onay İşleri", icon: "fa-file-signature", birimler: ["adet"] },
  { id: "boru_temini", ad: "Boru Temini ve Döşenmesi", icon: "fa-grip-lines", birimler: ["metre", "adet"] },
  { id: "kazı", ad: "Hat Kazısı", icon: "fa-person-digging", birimler: ["metre", "m³"] },
  { id: "kaynak_montaj", ad: "Kaynak ve Montaj", icon: "fa-link", birimler: ["adet"] },
  { id: "test", ad: "Gaz Kaçak Testi ve Kontrol", icon: "fa-vial", birimler: ["adet"] },
  { id: "yalitım", ad: "Boru Yalıtımı ve Kaplama", icon: "fa-fill-drip", birimler: ["metre"] },
  { id: "regulator_sayac", ad: "Regülatör ve Sayaç Montajı", icon: "fa-tachometer-alt", birimler: ["adet"] },
  { id: "kombibas", ad: "Kombi/Kazancı Montajı", icon: "fa-fire", birimler: ["adet"] },
  { id: "vana_montaji", ad: "Vana ve Armatür Montajı", icon: "fa-toggle-on", birimler: ["adet"] },
  { id: "alarm", ad: "Gaz Alarm Sistemi Kurulumu", icon: "fa-bell", birimler: ["adet"] },
  { id: "etiket_belge", ad: "Etiketleme ve Belgeler", icon: "fa-id-badge", birimler: ["adet"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet", "kg", "torba","litre","metre","m²", "m³","kova","ton"] }
];
const ASANSOR = [
  { id: "kuyu_hazirlik", ad: "Kuyu Hazırlığı ve Temizlik", icon: "fa-broom", birimler: ["adet"] },
  { id: "ray_montaj", ad: "Ray Montajı", icon: "fa-grip-lines-vertical", birimler: ["metre", "adet"] },
  { id: "makine_daeresi", ad: "Makine Dairesi ve Ana Makine Kurulumu", icon: "fa-cogs", birimler: ["adet"] },
  { id: "kabin_montaj", ad: "Kabin Montajı", icon: "fa-cube", birimler: ["adet"] },
  { id: "karsilik_agirlik", ad: "Karşı Ağırlık Montajı", icon: "fa-balance-scale", birimler: ["adet"] },
  { id: "halat", ad: "Halat ve Taşıyıcı Sistem Montajı", icon: "fa-stream", birimler: ["metre"] },
  { id: "kapi_montaj", ad: "Kapıların Montajı", icon: "fa-door-closed", birimler: ["adet"] },
  { id: "elektrik", ad: "Elektrik Tesisatı ve Pano Kurulumu", icon: "fa-bolt", birimler: ["adet"] },
  { id: "aydinlatma", ad: "Kuyu İç Aydınlatma ve Güvenlik", icon: "fa-lightbulb", birimler: ["adet"] },
  { id: "kontrol_sistem", ad: "Kontrol ve Otomasyon Sistemleri", icon: "fa-memory", birimler: ["adet", "kat"] },
  { id: "test_devreye", ad: "Test ve Devreye Alma", icon: "fa-vials", birimler: ["adet"] },
  { id: "ruhsat", ad: "Ruhsatlandırma ve Kabul", icon: "fa-file-contract", birimler: ["adet"] },
  { id: "egitim_dokuman", ad: "Eğitim ve Dokümantasyon", icon: "fa-book", birimler: ["adet"] },
  { id: "bakim_garanti", ad: "Bakım ve Garanti", icon: "fa-wrench", birimler: ["adet", "yıl"] },
  { id: "diger", ad: "Diğer", icon: "fa-ellipsis", birimler: ["adet"] }
];

// İnce Üretim adımlarını buton olarak oluştur
const inceStepsRowEl = document.querySelector('#inceUretim .uretim-steps-row');
if(inceStepsRowEl){
  inceStepsRowEl.innerHTML = '';
  INCE_URETIM_ADIMLARI.forEach((adim, idx) => {
    const btn = document.createElement('button');
    btn.type = "button";
    btn.className = "uretim-step-btn btn btn-outline-secondary"; // Rengi ayır edebilirsin
    btn.setAttribute('data-adimid', adim.id);
    btn.innerHTML = `<i class="fa-solid ${adim.icon} me-1"></i>${adim.ad}`;
    inceStepsRowEl.appendChild(btn);

  });

  // Event listener ekle
  inceStepsRowEl.querySelectorAll('.uretim-step-btn').forEach(btn => {
    btn.addEventListener('click', function(){
      aktifAdimId = btn.getAttribute('data-adimid');
      aktifAltKalem = null;
      const adim = INCE_URETIM_ADIMLARI.find(a=>a.id === aktifAdimId);
      document.getElementById('modalBaslikIkon').innerHTML = `<i class="fa-solid ${adim.icon} me-1"></i>`;
      document.getElementById('modalBaslikText').textContent = adim.ad;
      if (aktifAdimId === 'zeminUygulamalari') {
        showZeminUygulamalari();
      } else if(aktifAdimId === 'sihhiTesisat'){
        showSihhiTesisat();
      } else if(aktifAdimId === 'icCephe'){
        showIcCephe();
      } else if(aktifAdimId === 'tavan'){
        showTavan();
      } else if(aktifAdimId === 'pimapen'){
        showPimapen();
      } else if(aktifAdimId === 'kapilar'){
        showKapilar();
      } else if(aktifAdimId === 'peyzaj'){
        showPeyzaj();
      } else if(aktifAdimId === 'mutfak'){
        showMutfak();
      } else if(aktifAdimId === 'islakMekanlar'){
        showIslakMekanlar();
      } else if(aktifAdimId === 'iklimlendirme'){
        showIklimlendirme();
      } else if(aktifAdimId === 'disCephe'){
        showDisCephe();
      } else if(aktifAdimId === 'korkuluklar'){
        showKorkuluklar();
      } else if(aktifAdimId === 'elektrikTesisat'){
        showElektrikTesisat();
      } else if(aktifAdimId === 'dogalgaz'){
        showDogalgaz();
      } else if(aktifAdimId === 'asansorKurulumu'){
        showAsansorKurulumu();
      } else if(aktifAdimId === 'mantolama'){
        showMantolama();
      }
      //showOdemeEvrakForm();
      bootstrap.Modal.getOrCreateInstance(document.getElementById('modalUretim')).show();
    });
  });
}

function showZeminUygulamalari(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Zemin Uygulamaları - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="zeminUygulamalariBtnGrup">${  
        ZEMIN_UYGULAMALARI.map(kal =>  
          `<button type="button" class="btn btn-outline-primary zemin-uygulamalari-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="zeminUygulamalariAltKalemForm"></div>`;  

  document.querySelectorAll('.zemin-uygulamalari-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Zemin Uygulamaları - "+ ZEMIN_UYGULAMALARI.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showZeminUygulamalari, aktifAltKalem, ZEMIN_UYGULAMALARI);
    }  
  });  
}
function showElektrikTesisat(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Elektrik Tesisat - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="elektrikTesisatBtnGrup">${  
        ELEKTRIK_TESISAT.map(kal =>  
          `<button type="button" class="btn btn-outline-primary elektrik-tesisat-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="elektrikTesisatAltKalemForm"></div>`;  

  document.querySelectorAll('.elektrik-tesisat-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Elektrik Tesisat - "+ ELEKTRIK_TESISAT.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showElektrikTesisat, aktifAltKalem, ELEKTRIK_TESISAT);
    }  
  });  
}
function showSihhiTesisat(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Sıhhi Tesisat - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="sihhiTesisatBtnGrup">${  
        SIHHI_TESISAT.map(kal =>  
          `<button type="button" class="btn btn-outline-primary sihhi-tesisat-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="sihhiTesisatAltKalemForm"></div>`;  

  document.querySelectorAll('.sihhi-tesisat-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Sıhhi Tesisat - "+ SIHHI_TESISAT.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showSihhiTesisat, aktifAltKalem, SIHHI_TESISAT);
    }  
  });  
}
function showIcCephe(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">İç Cephe - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="icCepheBtnGrup">${  
        IC_CEPHE.map(kal =>  
          `<button type="button" class="btn btn-outline-primary ic-cephe-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="icCepheAltKalemForm"></div>`;  

  document.querySelectorAll('.ic-cephe-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "İç Cephe - "+ IC_CEPHE.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showIcCephe, aktifAltKalem, IC_CEPHE);
    }  
  });  
}
function showTavan(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Tavan - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="tavanBtnGrup">${  
        TAVAN.map(kal =>  
          `<button type="button" class="btn btn-outline-primary tavan-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="tavanAltKalemForm"></div>`;  

  document.querySelectorAll('.tavan-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Tavan - "+ TAVAN.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showTavan, aktifAltKalem, TAVAN);
    }  
  });  
}
function showPimapen(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Pimapen - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="pimapenBtnGrup">${  
        PIMAPEN.map(kal =>  
          `<button type="button" class="btn btn-outline-primary pimapen-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="pimapenAltKalemForm"></div>`;  

  document.querySelectorAll('.pimapen-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Pimapen - "+ PIMAPEN.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showPimapen, aktifAltKalem, PIMAPEN);
    }  
  });  
}
function showKapilar(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Kapılar - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="kapilarBtnGrup">${  
        KAPILAR.map(kal =>  
          `<button type="button" class="btn btn-outline-primary kapilar-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="kapilarAltKalemForm"></div>`;  

  document.querySelectorAll('.kapilar-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Kapılar - "+ KAPILAR.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showKapilar, aktifAltKalem, KAPILAR);
    }  
  });  
}
function showPeyzaj(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Peyzaj - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="peyzajBtnGrup">${  
        PEYZAJ.map(kal =>  
          `<button type="button" class="btn btn-outline-primary peyzaj-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="peyzajAltKalemForm"></div>`;  

  document.querySelectorAll('.peyzaj-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Peyzaj - "+ PEYZAJ.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showPeyzaj, aktifAltKalem, PEYZAJ);
    }  
  });  
}
function showMutfak(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Mutfak - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="mutfakBtnGrup">${  
        MUTFAK.map(kal =>  
          `<button type="button" class="btn btn-outline-primary mutfak-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="mutfakAltKalemForm"></div>`;  

  document.querySelectorAll('.mutfak-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Mutfak - "+ MUTFAK.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showMutfak, aktifAltKalem, MUTFAK);
    }  
  });  
}
function showIslakMekanlar(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Islak Mekanlar - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="islakMekanlarBtnGrup">${  
        ISLAK_MEKANLAR.map(kal =>  
          `<button type="button" class="btn btn-outline-primary islak-mekanlar-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="islakMekanlarAltKalemForm"></div>`;  

  document.querySelectorAll('.islak-mekanlar-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "Islak Mekanlar - "+ ISLAK_MEKANLAR.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showIslakMekanlar, aktifAltKalem, ISLAK_MEKANLAR);
    }  
  });  
}
function showIklimlendirme(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">İklimlendirme - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="iklimlendirmeBtnGrup">${  
        IKLIMLENDIRME.map(kal =>  
          `<button type="button" class="btn btn-outline-primary iklimlendirme-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="iklimlendirmeAltKalemForm"></div>`;  

  document.querySelectorAll('.iklimlendirme-altkalem-btn').forEach(b=>{  
    b.onclick = function(){  
      aktifAltKalem = this.getAttribute('data-kalem');  
      document.getElementById('modalBaslikText').textContent =  
        "İklimlendirme - "+ IKLIMLENDIRME.find(x=>x.id===aktifAltKalem).ad;  
      showOdemeEvrakForm(true, false, showIklimlendirme, aktifAltKalem, IKLIMLENDIRME);
    }  
  });  
}
function showDisCephe(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Dış Cephe - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="disCepheBtnGrup">${  
        DIS_CEPHE.map(kal =>  
          `<button type="button" class="btn btn-outline-primary dis-cephe-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="disCepheAltKalemForm"></div>`;  

  document.querySelectorAll('.dis-cephe-altkalem-btn').forEach(b=>{  
    b.onclick = function() {
      aktifAltKalem = this.getAttribute('data-kalem');
      document.getElementById('modalBaslikText').textContent =
        "Dış Cephe - " + DIS_CEPHE.find(x=>x.id===aktifAltKalem).ad;
      showOdemeEvrakForm(true, false, showDisCephe, aktifAltKalem, DIS_CEPHE);
    }
  });  
}
function showKorkuluklar(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Korkuluklar - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="korkuluklarBtnGrup">${  
        KORKULUKLAR.map(kal =>  
          `<button type="button" class="btn btn-outline-primary korkuluklar-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="korkuluklarAltKalemForm"></div>`;  

  document.querySelectorAll('.korkuluklar-altkalem-btn').forEach(b=>{  
    b.onclick = function() {
      aktifAltKalem = this.getAttribute('data-kalem');
      document.getElementById('modalBaslikText').textContent =
        "Korkuluklar - " + KORKULUKLAR.find(x=>x.id===aktifAltKalem).ad;
      showOdemeEvrakForm(true, false, showKorkuluklar, aktifAltKalem, KORKULUKLAR);
    }
  });  
}
function showDogalgaz(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Doğalgaz - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="dogalgazBtnGrup">${  
        DOGALGAZ.map(kal =>  
          `<button type="button" class="btn btn-outline-primary dogalgaz-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="dogalgazAltKalemForm"></div>`;  

  document.querySelectorAll('.dogalgaz-altkalem-btn').forEach(b=>{  
    b.onclick = function() {
      aktifAltKalem = this.getAttribute('data-kalem');
      document.getElementById('modalBaslikText').textContent =
        "Doğalgaz - " + DOGALGAZ.find(x=>x.id===aktifAltKalem).ad;
      showOdemeEvrakForm(true, false, showDogalgaz, aktifAltKalem, DOGALGAZ);
    }
  });  
}
function showAsansorKurulumu(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Asansör Kurulumu - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="asansorKurulumuBtnGrup">${  
        ASANSOR.map(kal =>  
          `<button type="button" class="btn btn-outline-primary asansor-kurulumu-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="asansorKurulumuAltKalemForm"></div>`;  

  document.querySelectorAll('.asansor-kurulumu-altkalem-btn').forEach(b=>{  
    b.onclick = function() {
      aktifAltKalem = this.getAttribute('data-kalem');
      document.getElementById('modalBaslikText').textContent =
        "Asansör Kurulumu - " + ASANSOR.find(x=>x.id===aktifAltKalem).ad;
      showOdemeEvrakForm(true, false, showAsansorKurulumu, aktifAltKalem, ASANSOR);
    }
  });  
}
function showMantolama(){  
  document.getElementById('modalContentGenel').innerHTML =  
    `<div class="mb-3">  
      <div class="fw-bold fs-5 mb-2 text-center">Mantolama - Alt Kalem Seçiniz:</div>  
      <div class="d-flex flex-wrap justify-content-center gap-3 mb-3" id="mantolamaBtnGrup">${  
        MANTOLAMA.map(kal =>  
          `<button type="button" class="btn btn-outline-primary mantolama-altkalem-btn mb-2"  
            data-kalem="${kal.id}">  
              <i class="fa-solid ${kal.icon} me-1"></i>${kal.ad}  
          </button>`  
        ).join("")  
      }</div>  
    </div>  
    <div id="mantolamaAltKalemForm"></div>`;  

  document.querySelectorAll('.mantolama-altkalem-btn').forEach(b=>{  
    b.onclick = function() {
      aktifAltKalem = this.getAttribute('data-kalem');
      document.getElementById('modalBaslikText').textContent =
        "Mantolama - " + MANTOLAMA.find(x=>x.id===aktifAltKalem).ad;
      showOdemeEvrakForm(true, false, showMantolama, aktifAltKalem, MANTOLAMA);
    }
  });  
}


function showOdemeEvrakForm(isRadyal = false, isEvrakIsleri = false, geriHandler = null, altKalemId = null, kayitDizisi = null) {
  let alanAciklamasi = '';
  if(isEvrakIsleri) {
    alanAciklamasi = `<div class="alert alert-info py-2 mb-2"> <b>${aktifEvrakKurum} - ${aktifEvrakDetay}</b> işlemi için ödeme ve evrak ekleyin.</div>`;
  }
  // Hangisini gönderdiyse oradan bak!
  kayitDizisi = kayitDizisi || DIS_CEPHE; // eski kod devam etsin diye varsayılanı DIS_CEPHE bırakıyoruz
  const secilenKalem = kayitDizisi.find(x => x.id === altKalemId);
  const birimListesi = (secilenKalem && secilenKalem.birimler) ? secilenKalem.birimler : ['adet'];

  document.getElementById('modalContentGenel').innerHTML = `
    ${isRadyal? `  
    <div class="mb-2">  
      <button type="button" class="btn btn-link btn-sm ps-0 mb-2" id="geriRadyalBtn">  
        <i class="fa fa-chevron-left"></i> Alt Kalemler  
      </button>  
    </div>` : ''}
    ${alanAciklamasi}
    <div class="rowg">
      <div class="colg">
        <div class="card shadow-sm mb-3 w-100">
          <div class="card-header bg-light">
            <b class="text-primary"><i class="fa-solid fa-coins"></i> Ödeme Kayıtları</b>
          </div>
          <div class="card-body">
            <form id="odemeFormDinamik">
              <div class="row g-2 align-items-end">
                <div class="col-md-3">
                  <input type="text" class="form-control" id="odemeAciklama" placeholder="Açıklama" maxlength="100" required>
                </div>
                <div class="col-md-2">
                  <select class="form-select" id="odemeBirim" required>
                    ${birimListesi.map(birim => `<option value="${birim}">${birim}</option>`).join("")}
                  </select>
                </div>
                <div class="col-md-2">
                  <input type="number" class="form-control" id="odemeMiktar" placeholder="Miktar" min="1" step="any" required>
                </div>
                <div class="col-md-2">
                  <input type="number" class="form-control" id="odemeBirimFiyat" placeholder="Birim Fiyat (TL)" min="0" step="any" required>
                </div>
                <div class="col-md-3 text-end">
                  <div id="odemeToplamTutar" class="fw-bold text-success" style="font-size:1.1em;">Toplam: 0 TL</div>
                </div>
              </div>
              <div class="d-flex justify-content-end mt-2">
                <button type="submit" class="btn btn-success btn-sm"><i class="fa-solid fa-plus"></i> Kaydet</button>
              </div>
            </form>
            <div class="table-responsive mt-3">
              <table class="table table-striped table-hover align-middle small shadow-sm rounded" id="odemeTablosu">
                <thead class="table-primary">
                  <tr>
                    <th>#</th>
                    <th>Açıklama</th>
                    <th>Birim</th>
                    <th>Miktar</th>
                    <th>Birim Fiyat</th>
                    <th>Toplam Tutar</th>
                    <th>İşlem</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
              <div id="odemeBosMesaj" class="text-center text-secondary mt-3" style="display:none;">Henüz ödeme kaydı girilmemiş.</div>
            </div>
          </div>
        </div>
      </div>
      <div class="col-lg-5 col-12 d-flex flex-column align-items-center mx-auto">
        <div class="card shadow-sm mb-3 w-100">
          <div class="card-header bg-light">
            <b class="text-primary"><i class="fa-solid fa-paperclip"></i> Evrak Yükle</b>
          </div>
          <div class="card-body pt-3 pb-2">
            <form id="evrakFormDinamik">
              <div class="input-group mb-2">
                <input type="file" class="form-control" id="evrakDosya" name="file" required>
              </div>
              <div class="mb-2">
                <input type="text" class="form-control" id="evrakAciklama" maxlength="100" placeholder="Açıklama (opsiyonel)">
              </div>
              <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-primary btn-sm"><i class="fa-solid fa-upload"></i> Yükle</button>
              </div>
            </form>
            <hr>
            <div>
              <h6 class="mb-1 text-secondary">Yüklenen Evraklar:</h6>
              <ul class="list-group file-list" id="evrakListesi" style="font-size:0.97rem;"></ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  `;
  // Geri butonu olayı
  if(isRadyal && typeof geriHandler === 'function') {
    document.getElementById('geriRadyalBtn').onclick = geriHandler;
  }
  document.getElementById('odemeFormDinamik').onsubmit = odemeFormSubmit;
  document.getElementById('evrakFormDinamik').onsubmit = evrakFormSubmit;
  tabloGuncelleDinamik(isEvrakIsleri);
  evrakGuncelleDinamik(isEvrakIsleri);

  // Otomatik Toplam Hesaplama
  function updateToplamTutar() {
    const miktar = parseFloat(document.getElementById('odemeMiktar').value) || 0;
    const birimFiyat = parseFloat(document.getElementById('odemeBirimFiyat').value) || 0;
    document.getElementById('odemeToplamTutar').innerText =
      `Toplam: ${(miktar * birimFiyat).toLocaleString('tr-TR', {minimumFractionDigits:2, maximumFractionDigits:2})} TL`;
  }
  ['odemeMiktar','odemeBirimFiyat'].forEach(id=>
    document.getElementById(id).addEventListener('input', updateToplamTutar)
  );
  updateToplamTutar();
}
// -- Dinamik ödemeler
// Odeme formunu gönder
function odemeFormSubmit(e){
  e.preventDefault();
  const aciklama = document.getElementById('odemeAciklama').value.trim();
  const tutar = Number(document.getElementById('odemeTutar').value);
  const tarih = document.getElementById('odemeTarih').value;
  let key = aktifAdimId ? (aktifAltKalem ? aktifAdimId+"_"+aktifAltKalem : aktifAdimId) : aktifEvrakKey;
  if(aciklama && tutar > 0 && tarih && key) {
    showLoader();
    fetch('/evrak', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
          process:"save",
          userId, 
          projectName,
          aciklama, 
          tutar,
          tarih 
        })
      })
    .then(r => r.json())
    .then(() => tabloGuncelleDinamik(!!aktifEvrakKey))
    .finally(() => {
      hideLoader();
  });
    e.target.reset();
  }
}
function tabloGuncelleDinamik(isEvrakIsleri) {
  const tbody = document.querySelector('#odemeTablosu tbody');

  showLoader();

  fetch('/evrak', {
    method: 'POST',  
    headers: {  
        'Content-Type': 'application/json'  
    },
    credentials: 'include',
    body: JSON.stringify({
      process :"read",
      userId,
      projectName
    })
  })
    .then(r => r.json())
    .then(veri => {
      console.log("veri ",veri);
      tbody.innerHTML = '';
      if (!Array.isArray(veri) || veri.length === 0) {
        document.getElementById('odemeBosMesaj').style.display = '';
        document.getElementById('odemeTablosu').style.display = 'none';
      } else {
        document.getElementById('odemeBosMesaj').style.display = 'none';
        document.getElementById('odemeTablosu').style.display = '';
        veri.forEach((o, idx) => {
          const tr = document.createElement('tr');
          tr.innerHTML = `
            <td>${idx + 1}</td>
            <td>${o.aciklama || ''}</td>
            <td>${o.tutar}</td>
            <td>${o.tarih}</td>
            <td>
              <button class="btn btn-sm btn-danger" title="Sil" onclick="silOdemeSunucu('${o._id}')">
                <i class="fa-solid fa-trash"></i>
              </button>
            </td>
          `;
          tbody.appendChild(tr);
        });
      }
    })
    .finally(() => {
      hideLoader();
  });
}
async function silOdemeSunucu(odemeId) {
  const userConfirm = await showWarningMessage("Kayıt silinsin mi?","evet", false);
  if(!userConfirm) return;
  const userInputIndex = typeof aktifUserInputIndex !== 'undefined' ? aktifUserInputIndex : 0;
  const imarDurumuIndex = typeof aktifImarDurumuIndex !== 'undefined' ? aktifImarDurumuIndex : 0;

  showLoader();

  fetch('/evrak', {
    method: 'POST',
    headers: {'Content-Type': 'application/json'},
    body: JSON.stringify({
      process:"delete",
      userId,
      projectName,
      odemeId
    })
  })
  .then(r => r.json())
  .then(() => tabloGuncelleDinamik())
  .finally(() => {
      hideLoader(); // Artık ne olursa olsun loader kapanır (başarı ya da hata)
  });
}
window.silOdemeSunucu = silOdemeSunucu;
window.tabloGuncelleDinamik = tabloGuncelleDinamik;


async function evrakFormSubmit(e){
  e.preventDefault();
  const dosyaInput = document.getElementById('evrakDosya');
  const aciklamaInput = document.getElementById('evrakAciklama');
  const dosya = dosyaInput.files[0];
  if (!dosya) return;
  const aciklama = document.getElementById('evrakAciklama').value.trim();
  let key = aktifAdimId ? (aktifAltKalem ? aktifAdimId+"_"+aktifAltKalem : aktifAdimId) : aktifEvrakKey;
  if (!key) return;

  // Dosyayı önce PDF’e çevir
  let pdfFile;
  try {
    pdfFile = await fileToPdfBlob(dosya);
  } catch(e) {
    dosyaInput.value = "";
    aciklamaInput.value = "";
    showWarningMessage("Dosya PDF veya resim değil!", "tamam", false);
    return;
  }

  showLoader();

  const formData = new FormData();
  formData.append('file', pdfFile);
  formData.append('aciklama', aciklama);
  formData.append('key', key);
  formData.append('process', "saveEvrak");
  formData.append('projectName', projectName);
  formData.append('userId', userId);

  fetch('/evrak', {
    method: 'POST',
    body: formData
  })
  .then(r => r.json())
  .then(() => {
      evrakGuncelleDinamik(!!aktifEvrakKey); 

      // --- Kutu içeriklerini temizle ---
      dosyaInput.value = "";
      aciklamaInput.value = "";
    })
    .finally(() => {
      hideLoader();
  });

  // Eğer form elemanı ise, resetle (özellikle onsubmit ile çağrılıyorsa)
  if (e.target && typeof e.target.reset === 'function') {
    e.target.reset();
  }
}
function fileToPdfBlob(file) {
  return new Promise((resolve, reject) => {
    if (file.type === "application/pdf") {
      // Zaten pdf, dosyayı aynen kullan.
      resolve(file);
    } else if (file.type.startsWith("image/")) {
      // jsPDF ile resmi PDFe koyup blob yapalım
      const reader = new FileReader();
      reader.onload = function(e) {
        const imgData = e.target.result;
        const pdf = new window.jspdf.jsPDF(); // veya new jsPDF();
        pdf.addImage(imgData, 'JPEG', 10, 10, 180, 250);
        const pdfBlob = pdf.output("blob");
        resolve(new File([pdfBlob], file.name.replace(/\..+$/, ".pdf"), { type: "application/pdf" }));
      };
      reader.onerror = reject;
      reader.readAsDataURL(file);
    } else {
      // Diğer dosya türleri için uyarı
      //alert("Sadece PDF veya resim yükleyebilirsiniz!");
      reject("Desteklenmeyen dosya türü");
    }
  });
}

function evrakGuncelleDinamik() {
    const ul = document.getElementById('evrakListesi');
    fetch('/evrak', {
        method: 'POST',
        headers: {'Content-Type': 'application/json'},
        body: JSON.stringify({
            process:"readEvrak",
            userId,
            projectName // ve gerekirse imarDurumuIndex
        })
    })
    .then(r => r.json())
    .then(veri => {
        ul.innerHTML = '';
        if (!veri || veri.length === 0) {
            ul.innerHTML = `<li class="list-group-item text-secondary">Evrak yok veya yüklenmemiş.</li>`;
        } else {
            veri.forEach(ev => {
                const fileName = ev.fileName || ev.dosyaAdi || "evrak";
                const filePath = ev.path;
                const li = document.createElement('li');
                li.className = "list-group-item d-flex justify-content-between align-items-center";
                li.innerHTML = `
                    <span>
                        <i class="fa-solid fa-file-arrow-down me-1"></i>
                        <b>${fileName}</b>
                        <small class="text-muted">${ev.aciklama || ''}</small>
                        <button type="button"
                            class="btn btn-link btn-sm px-0 ms-1"
                            title="Görüntüle"
                            onclick="showEvrakModal('${filePath.replace(/'/g,"\\'")}', '${fileName.replace(/'/g,"\\'") }')">
                            <i class="fa fa-eye"></i>
                        </button>
                        <a href="${filePath}" download="${fileName}"
                            class="btn btn-link btn-sm px-0 ms-1" title="İndir">
                            <i class="fa fa-download"></i>
                        </a>
                    </span>
                    <button class="btn btn-outline-danger btn-sm" title="Sil" onclick="silEvrakSunucu('${ev._id}')">
                        <i class="fa-solid fa-trash"></i>
                    </button>
                `;
                ul.appendChild(li);
            });
        }
    });
}
async function silEvrakSunucu(evrakId){
    const userConfirm = await showWarningMessage("Kayıt silinsin mi?","evet", false);
    if(!userConfirm) return;
    showLoader();
    fetch('/evrak', {
        method: 'POST',
        headers: {'Content-Type':'application/json'},
        body: JSON.stringify({
            process:"deleteEvrak",
            userId,
            projectName,
            evrakId
        })
    })
    .then(r => r.json())
    .then(() => evrakGuncelleDinamik())
    .finally(() => {
      hideLoader();
  });
}
function showEvrakModal(fileUrl, fileName) {
    let content = '';
    const ext = fileName.split('.').pop().toLowerCase();
    //const isMobile = isMobileDevice();
    const isMobile = false;

    if (['jpg', 'jpeg', 'png', 'gif', 'webp', 'bmp'].includes(ext)) {
        content = `<img src="${fileUrl}" class="img-fluid" alt="${fileName}">`;
    } else if (['pdf'].includes(ext)) {
        if (isMobile) {
            // Sadece buton, uyarı metni
            content = `
                <a href="${fileUrl}" target="_blank" class="btn btn-secondary my-2 w-100 mb-2">
                    PDF'i Yeni Sekmede Aç
                </a>
                <div class="alert alert-warning small text-center mt-2 mb-0">
                    PDF görüntüleme mobil tarayıcılarda desteklenmeyebilir.<br>
                    Yukarıdaki butonu kullanın.
                </div>
            `;
        } else {
            // Hem iframe hem buton (masaüstü)
            content = `
                <a href="${fileUrl}" target="_blank" class="btn btn-secondary my-2 w-100 mb-2">
                    PDF'i Yeni Sekmede Aç
                </a>
                <iframe src="${fileUrl}" style="width:100%;min-height:60vh;border:none"></iframe>
                <div class="text-muted small mt-2">
                    PDF'i burada görüntüleyemiyorsanız butonu kullanın.
                </div>
            `;
        }
    } else {
        content = `Bu dosya türü görüntülenemiyor.<br>
                   <a href="${fileUrl}" download class="btn btn-primary mt-3">İndir (${fileName})</a>`;
    }

    document.getElementById('evrakModalLabel').textContent = fileName;
    document.getElementById('evrakModalBody').innerHTML = content;

    const modal = new bootstrap.Modal(document.getElementById('evrakModal'));
    modal.show();
}
function isMobileDevice() {
  // Modern tarayıcılar için oldukça güvenli kontrol
  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
}
window.silEvrakSunucu = silEvrakSunucu;
window.evrakGuncelleDinamik = evrakGuncelleDinamik;
window.showEvrakModal = showEvrakModal;



    quatationButton.addEventListener("click", () => {
        window.location.href = `/quatation?projectName=${encodeURIComponent(projectName)}`;
    });
    graphsButton.addEventListener("click", () => {
        window.location.href = `/analiz?projectName=${encodeURIComponent(projectName)}`;
    });
    soldButton.addEventListener("click", () => {
        window.location.href = `/sold?projectName=${encodeURIComponent(projectName)}`;
    });
    buttonHome.addEventListener("click", () => {  
        window.location.href = `/draw?projectName=${encodeURIComponent(projectName)}`;
    });
    loginButton.addEventListener("click", () => {
        window.location.href = "/";
    });

    function showLoader() {
        document.getElementById('loader').style.display = 'flex';
    }
    function hideLoader() {
        document.getElementById('loader').style.display = 'none';
    }

</script>
</body>
</html>
